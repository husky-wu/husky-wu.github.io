<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HuskyWuの博客</title>
  <icon>https://www.gravatar.com/avatar/677a3831b4f8567bbc2750dafb4fa06e</icon>
  <subtitle>Huskyの技术分享</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://husky-wu.github.io/"/>
  <updated>2020-12-17T05:50:34.561Z</updated>
  <id>https://husky-wu.github.io/</id>
  
  <author>
    <name>HuskyWu</name>
    <email>beantech@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PostgreSQL体系结构</title>
    <link href="https://husky-wu.github.io/2020/12/17/PostgreSQL/PostgreSQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
    <id>https://husky-wu.github.io/2020/12/17/PostgreSQL/PostgreSQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</id>
    <published>2020-12-17T05:46:54.000Z</published>
    <updated>2020-12-17T05:50:34.561Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一、引言</strong></p><hr><p>PostgreSQL是最像Oracle的开源数据库，我们可以拿<a href="https://cloud.tencent.com/product/cdb?from=10680" target="_blank" rel="noopener">MySQL</a>和Oracle来比较学习它的体系结构，比较容易理解。本文会讨论pg的如下结构：</p><ul><li>日志文件</li><li>参数文件</li><li>控制文件</li><li>数据文件</li><li>redo日志（WAL）</li><li>后台进程</li></ul><p>PostgreSQL的主要结构如下：</p><p><img src="../PostgreSQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/image-20201217134920305.png" alt="image-20201217134920305" title="null"></p><p><img src="../PostgreSQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/image-20201217134934853.png" alt="image-20201217134934853" title="null"></p><p><strong>二、日志文件</strong></p><hr><p><strong>2.1 日志文件种类</strong></p><p>1）$PGDATA/log 运行日志(pg10之前为$PGDATA/pg_log) </p><p>2）$PGDATA/pg_wal 重做日志(pg10之前为$PGDATA/pg_xlog) </p><p>3）$PGDATA/pg_xact 事务提交日志(pg10之前为$PGDATA/pg_clog) </p><p>4）服务器日志，可以在启动的时候指定，比如pg_ctl start -l ./alert.log</p><p><strong>2.2 运行日志</strong></p><p>2.2.1 运行日志参数</p><p>运行日志主要相关的参数如下，默认没有开启的话没有log目录，开启后会自动生成。</p><table><thead><tr><th align="left">参数</th><th align="left">可选值/说明</th></tr></thead><tbody><tr><td align="left">log_destination = ‘csvlog’</td><td align="left"># stderr, csvlog, syslog, and eventlog ,csvlog requires logging_collector to be on一般选择这个，可以将csv日志导入数据库中查看</td></tr><tr><td align="left">logging_collector=on</td><td align="left"># Enable capturing of stderr and csvlog into log files选scv格式的日志必须设置这个参数on，修改需要重启</td></tr><tr><td align="left">log_directory = ‘log’</td><td align="left">日志输出目录</td></tr><tr><td align="left">log_filename=’postgresql-%Y-%m-%d_%H%M%S.log</td><td align="left">日志文件名字格式</td></tr><tr><td align="left">log_file_mode=0600</td><td align="left"># creation mode for log files 日志文件权限</td></tr><tr><td align="left">log_truncate_on_rotation = on</td><td align="left">设置重用日志</td></tr><tr><td align="left">log_rotation_age = 1d</td><td align="left">多长时间重用日志</td></tr><tr><td align="left">log_rotation_size = 10MB</td><td align="left">日志达到多大重用</td></tr><tr><td align="left">log_min_messages=warning</td><td align="left">#debug5,debug4,debug3,debug2,debug1,info,notice,warning,error,log,fatal,panic</td></tr><tr><td align="left">log_min_duration_statement = 60</td><td align="left">慢sql记录（超过多长时间的sql）</td></tr><tr><td align="left">log_checkpoints = on</td><td align="left">记录checkpoint操作</td></tr><tr><td align="left">log_connections = on</td><td align="left">记录会话连接操作</td></tr><tr><td align="left">log_disconnections = on</td><td align="left">记录会话断开操作</td></tr><tr><td align="left">log_duration = on</td><td align="left">记录sql执行时间</td></tr><tr><td align="left">log_lock_waits=on</td><td align="left"># log lock waits &gt;= deadlock_timeout 记录时间长的阻塞</td></tr><tr><td align="left">log_statement=’ddl’</td><td align="left"># none, ddl, mod, all 记录ddl</td></tr></tbody></table><p>2.2.2 csv日志入库</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE pg_log</span><br><span class="line">(</span><br><span class="line">  log_time timestamp(<span class="number">3</span>) <span class="keyword">with</span> time zone,</span><br><span class="line">  user_name text,</span><br><span class="line">  database_name text,</span><br><span class="line">  process_id integer,</span><br><span class="line">  connection_from text,</span><br><span class="line">  session_id text,</span><br><span class="line">  session_line_num bigint,</span><br><span class="line">  command_tag text,</span><br><span class="line">  session_start_time timestamp <span class="keyword">with</span> time zone,</span><br><span class="line">  virtual_transaction_id text,</span><br><span class="line">  transaction_id bigint,</span><br><span class="line">  error_severity text,</span><br><span class="line">  sql_state_code text,</span><br><span class="line">  message text,</span><br><span class="line">  detail text,</span><br><span class="line">  hint text,</span><br><span class="line">  internal_query text,</span><br><span class="line">  internal_query_pos integer,</span><br><span class="line">  context text,</span><br><span class="line">  query text,</span><br><span class="line">  query_pos integer,</span><br><span class="line">  location text,</span><br><span class="line">  application_name text,</span><br><span class="line">  PRIMARY KEY (session_id, session_line_num)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&lt; pg@cs-db /oracle/soft/data/log <span class="number">16</span>:<span class="number">12</span> --&gt; pwd</span><br><span class="line">/oracle/soft/data/log</span><br><span class="line">&lt; pg@cs-db /oracle/soft/data/log <span class="number">16</span>:<span class="number">12</span> --&gt; </span><br><span class="line">&lt; pg@cs-db /oracle/soft/data/log <span class="number">16</span>:<span class="number">12</span> --&gt; ls -rtl</span><br><span class="line">total <span class="number">8</span></span><br><span class="line">-rw------- <span class="number">1</span> pg pg <span class="number">168</span> Nov <span class="number">10</span> <span class="number">16</span>:<span class="number">08</span> postgresql<span class="number">-16.</span>log</span><br><span class="line">-rw------- <span class="number">1</span> pg pg <span class="number">502</span> Nov <span class="number">10</span> <span class="number">16</span>:<span class="number">08</span> postgresql<span class="number">-16.</span>csv</span><br><span class="line">&lt; pg@cs-db /oracle/soft/data/log <span class="number">16</span>:<span class="number">12</span> --&gt; pwd</span><br><span class="line">/oracle/soft/data/log</span><br><span class="line">&lt; pg@cs-db /oracle/soft/data/log <span class="number">16</span>:<span class="number">12</span> --&gt; psql</span><br><span class="line">psql (<span class="number">11</span>beta3)</span><br><span class="line">Type <span class="string">"help"</span> <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">li=# copy pg_log from '/oracle/soft/data/log/postgresql-16.csv' with csv;</span><br><span class="line">COPY <span class="number">3</span></span><br><span class="line">li=#</span><br></pre></td></tr></table></figure><p>这样就可以用sql来查看了。</p><p><strong>2.3 pg_wal 见六</strong></p><p><strong>2.4 事务日志pg_xact</strong></p><p>pg_xact是事务提交日志，记录了事务的元数据。默认开启。内容一般不能直接读。</p><p><strong>2.5 服务器日志</strong></p><p>如果用pg_ctl启动的时候没有指定-l参数来指定服务器日志，错误可能会输出到cmd前台。服务器日志记录了数据库的重要信息，一个服务器日志的内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[postgres@whf307 log]$ more alert.log</span><br><span class="line"><span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="number">14</span>:<span class="number">11</span>:<span class="number">36.718</span> CST [<span class="number">14660</span>] LOG:  listening on IPv4 address <span class="string">"0.0.0.0"</span>, port <span class="number">5432</span></span><br><span class="line"><span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="number">14</span>:<span class="number">11</span>:<span class="number">36.718</span> CST [<span class="number">14660</span>] LOG:  listening on IPv6 address <span class="string">"::"</span>, port <span class="number">5432</span></span><br><span class="line"><span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="number">14</span>:<span class="number">11</span>:<span class="number">36.720</span> CST [<span class="number">14660</span>] LOG:  listening on Unix socket <span class="string">"/data/.s.PGSQL.5432"</span></span><br><span class="line"><span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="number">14</span>:<span class="number">11</span>:<span class="number">36.729</span> CST [<span class="number">14660</span>] LOG:  redirecting log output to logging collector process</span><br><span class="line"><span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="number">14</span>:<span class="number">11</span>:<span class="number">36.729</span> CST [<span class="number">14660</span>] HINT:  Future log output will appear <span class="keyword">in</span> directory <span class="string">"log"</span>.</span><br></pre></td></tr></table></figure><p>lsof或许可以过滤出在写的日志文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -c postgres| grep REG | grep -v /usr | grep -v /dev | grep -v /SYS</span><br></pre></td></tr></table></figure><p><strong>三、参数文件</strong></p><hr><p><strong>3.1 postgresql.conf</strong></p><p>pg的主要参数文件，有很详细的说明和注释，和Oracle的pfile，MySQL的my.cnf类似。默认在$PGDATA下。很多参数修改后都需要重启。9.6之后支持了alter system来修改，修改后的会报存在<strong>$PGDATA/postgresql.auto.conf下</strong>，可以reload或者 restart来使之生效。</p><p>主要的参数如下：</p><table><thead><tr><th align="left">参数</th><th align="left">可选值/说明</th></tr></thead><tbody><tr><td align="left">listen_addresses=’*’</td><td align="left">监听客户端的地址，默认是本地的，需要修改为*或者0.0.0.0</td></tr><tr><td align="left">port = 5432</td><td align="left">pg端口，默认是5432</td></tr><tr><td align="left">max_connections = 2000</td><td align="left">最大连接数，默认100</td></tr><tr><td align="left">unix_socket_directories</td><td align="left">socket文件的位置，默认在/tmp下面</td></tr><tr><td align="left">shared_buffers</td><td align="left">数据缓存区，类型Oracle的buffer cache。建议值 1/4主机内存</td></tr><tr><td align="left">maintenance_work_mem</td><td align="left">维护工作内存，用于vacuum,create index,reindex等。建议值(1/4 主机内存)/autovacuum_max_workers</td></tr><tr><td align="left">max_worker_processes</td><td align="left">总worker数</td></tr><tr><td align="left">max_parallel_workers_per_gather</td><td align="left">单条QUERY中，每个node最多允许开启的并行计算WORKER数</td></tr><tr><td align="left">wal_level</td><td align="left">wal级别，11 默认是replica了</td></tr><tr><td align="left">wal_buffers</td><td align="left">类似Oracle的log buffer</td></tr><tr><td align="left">checkpoint_timeout</td><td align="left">checkpoint时间间隔</td></tr><tr><td align="left">max_wal_size</td><td align="left">控制wal的数量</td></tr><tr><td align="left">min_wal_size</td><td align="left">控制wal的数量</td></tr><tr><td align="left">archive_command</td><td align="left">开归档，比如 ‘test ! -f /disk1/digoal/arch/%f &amp;&amp; cp %p /disk1/digoal/arch/%f’</td></tr><tr><td align="left">autovacuum</td><td align="left">开启自动vacuum</td></tr></tbody></table><p><strong>3.2 pg_hba.conf</strong></p><p>这个是黑白名单的设置。文件里有详细的参数说明，默认参数如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># TYPE  DATABASE        USER            ADDRESS                 METHOD</span><br><span class="line"># "local" is for Unix domain socket connections only</span><br><span class="line">local   all             all                                     trust</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host    all             all             <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/<span class="number">32</span>            trust</span><br><span class="line"># IPv6 local connections:</span><br><span class="line">host    all             all             ::<span class="number">1</span>/<span class="number">128</span>                 trust</span><br><span class="line"># Allow replication connections from localhost, by a user with the</span><br><span class="line"># replication privilege.</span><br><span class="line">local   replication     all                                     trust</span><br><span class="line">host    replication     all             <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/<span class="number">32</span>            trust</span><br><span class="line">host    replication     all             ::<span class="number">1</span>/<span class="number">128</span>                 trust</span><br><span class="line"># local      DATABASE  USER  METHOD  [OPTIONS]</span><br><span class="line"># host       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]</span><br><span class="line"># hostssl    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]</span><br><span class="line"># hostnossl  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]</span><br></pre></td></tr></table></figure><p><strong>type</strong> 列有local，host，hostssl，hostnossl四种。local是本地认证 <strong>database</strong> 可以是all，或者指定的数据库 <strong>user</strong>列可以是all，或者具体的用户 <strong>address</strong> 可以是ip或者网段 <strong>method</strong>比较重要，有”trust”, “reject”, “md5”, “password”, “scram-sha-256”, # “gss”, “sspi”, “ident”, “peer”, “pam”, “ldap”, “radius” or “cert”这么多可选。trust是免密登录；reject是黑名单拒绝；md5是加密的密码；password是没有加密的密码；ident是Linux下PostgreSQL默认的local认证方式，凡是能正确登录服务器的操作系统用户（注：不是数据库用户）就能使用本用户映射的数据库用户不需密码登录数据库</p><p><strong>3.3 pg_ident.conf</strong></p><p>pg_ident.con是用户映射配置文件。结合pg_hba.connf中，method为ident可以用特定的操作系统用户和指定的数据库用户登录数据库。如下： pg_ident.conf如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># MAPNAME    SYSTEM-USERNAME    PG-USERNAME</span><br><span class="line">mapll　　　　      test                     sa</span><br></pre></td></tr></table></figure><p>pg_hba.conf如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># TYPE  DATABASE  USER  CIDR-ADDRESS  METHOD</span><br><span class="line">local    all      all        ident  map=mapll</span><br></pre></td></tr></table></figure><p><strong>四、控制文件</strong></p><hr><p><strong>4.1 控制文件位置</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$PGDATA/global/pg_control</span><br></pre></td></tr></table></figure><p>控制文件在数据库目录的global目录下。控制文件记录了数据库的重要信息。</p><p><strong>4.2 查看控制文件</strong></p><p>pg_controldata可以查看控制文件的内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[postgres@whf307 global]$ pg_controldata  $PGDATA</span><br><span class="line">pg_control version number:            <span class="number">1100</span></span><br><span class="line">Catalog version number:               <span class="number">201809051</span></span><br><span class="line">Database system identifier:           6684270596680436587  #dbid</span><br><span class="line">Database cluster state:               in production        # primary</span><br><span class="line">pg_control last modified:             Thu <span class="number">16</span> May <span class="number">2019</span> <span class="number">02</span>:<span class="number">26</span>:<span class="number">37</span> PM CST</span><br><span class="line">Latest checkpoint location:           <span class="number">0</span>/<span class="number">48812</span>A0</span><br><span class="line">Latest checkpoint<span class="string">'s REDO location:    0/4881268                #redo 位置</span></span><br><span class="line">Latest checkpoint's REDO WAL file:    000000010000000000000001 #wal文件号</span><br><span class="line">Latest checkpoint<span class="string">'s TimeLineID:       1</span></span><br><span class="line"><span class="string">Latest checkpoint'</span>s PrevTimeLineID:   <span class="number">1</span></span><br><span class="line">Latest checkpoint<span class="string">'s full_page_writes: on</span></span><br><span class="line">Latest checkpoint's NextXID:          0:572          #下一个事务id</span><br><span class="line">Latest checkpoint<span class="string">'s NextOID:          16388          #下一个OID</span></span><br><span class="line"><span class="string">Latest checkpoint'</span>s NextMultiXactId:  <span class="number">1</span></span><br><span class="line">Latest checkpoint<span class="string">'s NextMultiOffset:  0</span></span><br><span class="line"><span class="string">Latest checkpoint'</span>s oldestXID:        <span class="number">561</span></span><br><span class="line">Latest checkpoint<span class="string">'s oldestXID'</span>s DB:   <span class="number">1</span></span><br><span class="line">Latest checkpoint<span class="string">'s oldestActiveXID:  572</span></span><br><span class="line"><span class="string">Latest checkpoint'</span>s oldestMultiXid:   <span class="number">1</span></span><br><span class="line">Latest checkpoint<span class="string">'s oldestMulti'</span>s DB: <span class="number">1</span></span><br><span class="line">Latest checkpoint<span class="string">'s oldestCommitTsXid:0</span></span><br><span class="line"><span class="string">Latest checkpoint'</span>s newestCommitTsXid:<span class="number">0</span></span><br><span class="line">Time <span class="keyword">of</span> latest checkpoint:            Thu <span class="number">16</span> May <span class="number">2019</span> <span class="number">02</span>:<span class="number">26</span>:<span class="number">36</span> PM CST</span><br><span class="line">Fake LSN counter <span class="keyword">for</span> unlogged rels:   <span class="number">0</span>/<span class="number">1</span></span><br><span class="line">Minimum recovery ending location:     <span class="number">0</span>/<span class="number">0</span></span><br><span class="line">Min recovery ending loc<span class="string">'s timeline:   0</span></span><br><span class="line"><span class="string">Backup start location:                0/0</span></span><br><span class="line"><span class="string">Backup end location:                  0/0</span></span><br><span class="line"><span class="string">End-of-backup record required:        no</span></span><br><span class="line"><span class="string">wal_level setting:                    replica   #wal级别</span></span><br><span class="line"><span class="string">wal_log_hints setting:                off</span></span><br><span class="line"><span class="string">max_connections setting:              100       #最大连接数</span></span><br><span class="line"><span class="string">max_worker_processes setting:         8</span></span><br><span class="line"><span class="string">max_prepared_xacts setting:           0</span></span><br><span class="line"><span class="string">max_locks_per_xact setting:           64</span></span><br><span class="line"><span class="string">track_commit_timestamp setting:       off</span></span><br><span class="line"><span class="string">Maximum data alignment:               8</span></span><br><span class="line"><span class="string">Database block size:                  8192    #数据块大小</span></span><br><span class="line"><span class="string">Blocks per segment of large relation: 131072</span></span><br><span class="line"><span class="string">WAL block size:                       8192    #wal 数据块大小</span></span><br><span class="line"><span class="string">Bytes per WAL segment:                67108864  #单个wal大小</span></span><br><span class="line"><span class="string">Maximum length of identifiers:        64</span></span><br><span class="line"><span class="string">Maximum columns in an index:          32</span></span><br><span class="line"><span class="string">Maximum size of a TOAST chunk:        1996</span></span><br><span class="line"><span class="string">Size of a large-object chunk:         2048</span></span><br><span class="line"><span class="string">Date/time type storage:               64-bit integers</span></span><br><span class="line"><span class="string">Float4 argument passing:              by value</span></span><br><span class="line"><span class="string">Float8 argument passing:              by value</span></span><br><span class="line"><span class="string">Data page checksum version:           1</span></span><br><span class="line"><span class="string">Mock authentication nonce:            f01b78f5a88882f2f1811bbbc637cc4766d57d39831139a6b3e881d76272d892</span></span><br><span class="line"><span class="string">[postgres@whf307 global]$</span></span><br></pre></td></tr></table></figure><p>controlfile记录了数据库运行的一些信息，比如数据库id，是否open，wal的位置，checkpoint的位置，等等。controlfile是很重要的文件，数据库部署和调整。</p><p><strong>五、数据文件</strong></p><hr><p><strong>5.1 page</strong></p><p>pg中，每个索引和表都是一个单独的文件，pg中叫做page。默认是每个大于1G的page会被分割pg_class.relfilenode.1这样的文件。page的大小在initdb的时候指定（–with-segsize）。</p><p><strong>5.2 page物理位置</strong></p><p>page的物理位置在$PGDATA/BASE/DATABASE_OID/PG_CLASS.RELFILENODE</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mydb=# select relfilenode from pg_class where relname='t1';</span><br><span class="line"> relfilenode </span><br><span class="line">-------------</span><br><span class="line">       <span class="number">16385</span></span><br><span class="line">(<span class="number">1</span> row)</span><br><span class="line"></span><br><span class="line">mydb=# select pg_relation_filepath('t1');</span><br><span class="line"> pg_relation_filepath </span><br><span class="line">----------------------</span><br><span class="line"> base/<span class="number">16384</span>/<span class="number">16385</span></span><br><span class="line">(<span class="number">1</span> row)</span><br><span class="line"></span><br><span class="line">mydb=# show data_directory;</span><br><span class="line"> data_directory </span><br><span class="line">----------------</span><br><span class="line"> /data</span><br><span class="line">(<span class="number">1</span> row)</span><br><span class="line"></span><br><span class="line">mydb=# \q</span><br><span class="line">[postgres@whf307 global]$ ls -rtl /data/base/<span class="number">16384</span>/<span class="number">16385</span></span><br><span class="line">-rw------- <span class="number">1</span> postgres postgres <span class="number">8192</span> May <span class="number">16</span> <span class="number">14</span>:<span class="number">26</span> /data/base/<span class="number">16384</span>/<span class="number">16385</span></span><br><span class="line">[postgres@whf307 global]$</span><br></pre></td></tr></table></figure><p>需要注意的是，pg_class.relfilenode类似dba_objects.data_object_id，truncate表之后relfilenode会变。对应的物理文件名字也会变。</p><p><strong>六、WAL日志</strong></p><hr><p><strong>6.1 wal位置</strong></p><p>wal在$PGDATA/pg_wal下。10之前为pg_xlog</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[postgres@whf307 data]$ cd pg_wal</span><br><span class="line">[postgres@whf307 pg_wal]$ </span><br><span class="line">[postgres@whf307 pg_wal]$ ls -rtl</span><br><span class="line">total <span class="number">65536</span></span><br><span class="line">drwx------ <span class="number">2</span> postgres postgres        <span class="number">6</span> Apr <span class="number">27</span> <span class="number">02</span>:<span class="number">23</span> archive_status</span><br><span class="line">-rw------- <span class="number">1</span> postgres postgres <span class="number">67108864</span> May <span class="number">16</span> <span class="number">15</span>:<span class="number">56</span> <span class="number">000000010000000000000001</span></span><br><span class="line">[postgres@whf307 pg_wal]$</span><br></pre></td></tr></table></figure><p><strong>6.2 wal命名格式</strong></p><p>文件名称为16进制的24个字符组成，每8个字符一组，每组的意义如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00000001</span> <span class="number">00000000</span> <span class="number">00000001</span></span><br><span class="line">-------- -------- -------- </span><br><span class="line">时间线     逻辑id    物理id</span><br></pre></td></tr></table></figure><p><strong>6.3 查看wal时间</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">postgres=# select pg_walfile_name(pg_current_wal_lsn());</span><br><span class="line">     pg_walfile_name      </span><br><span class="line">--------------------------</span><br><span class="line"> <span class="number">000000010000000000000001</span></span><br><span class="line">(<span class="number">1</span> row)</span><br><span class="line"></span><br><span class="line">postgres=#</span><br><span class="line"></span><br><span class="line">postgres=# select * from pg_ls_waldir() order by modification asc;</span><br><span class="line">           name           |   size   |      modification      </span><br><span class="line">--------------------------+----------+------------------------</span><br><span class="line"> <span class="number">000000010000000000000001</span> | <span class="number">67108864</span> | <span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="number">15</span>:<span class="number">56</span>:<span class="number">32</span>+<span class="number">08</span></span><br><span class="line">(<span class="number">1</span> row)</span><br><span class="line">postgres=#</span><br></pre></td></tr></table></figure><p>6.4 切换wal</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">postgres=# select pg_switch_wal();</span><br><span class="line"> pg_switch_wal </span><br><span class="line">---------------</span><br><span class="line"> <span class="number">0</span>/<span class="number">48814E8</span></span><br><span class="line">(<span class="number">1</span> row)</span><br><span class="line">postgres=# select * from pg_ls_waldir() order by modification asc;</span><br><span class="line">           name           |   size   |      modification      </span><br><span class="line">--------------------------+----------+------------------------</span><br><span class="line"> <span class="number">000000010000000000000001</span> | <span class="number">67108864</span> | <span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="number">16</span>:<span class="number">12</span>:<span class="number">29</span>+<span class="number">08</span></span><br><span class="line"> <span class="number">000000010000000000000002</span> | <span class="number">67108864</span> | <span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="number">16</span>:<span class="number">12</span>:<span class="number">30</span>+<span class="number">08</span></span><br><span class="line">(<span class="number">2</span> rows)</span><br></pre></td></tr></table></figure><p><strong>6.5 pg_waldump查看wal</strong></p><p><img src="../PostgreSQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/image-20201217135025164.png" alt="image-20201217135025164" title="null"></p><p>pg_waldump可以查看wal的具体内容</p><p><strong>七、后台进程</strong></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">postgres <span class="number">15309</span>     <span class="number">1</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">51</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> /pg/pg11/bin/postgres</span><br><span class="line">postgres <span class="number">15310</span> <span class="number">15309</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">51</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> postgres: logger   </span><br><span class="line">postgres <span class="number">15312</span> <span class="number">15309</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">51</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> postgres: checkpointer  </span><br><span class="line">postgres <span class="number">15313</span> <span class="number">15309</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">51</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> postgres: background writer  </span><br><span class="line">postgres <span class="number">15314</span> <span class="number">15309</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">51</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> postgres: walwriter  </span><br><span class="line">postgres <span class="number">15315</span> <span class="number">15309</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">51</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> postgres: autovacuum launcher  </span><br><span class="line">postgres <span class="number">15316</span> <span class="number">15309</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">51</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> postgres: stats collector  </span><br><span class="line">postgres <span class="number">15317</span> <span class="number">15309</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">51</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> postgres: logical replication launcher</span><br></pre></td></tr></table></figure><ul><li>postgres 主进程</li><li>logger 日志进程</li><li>checkpointer checkpoint进程</li><li>background writer 数据文件写进程</li><li>walwriter wal写进程</li><li>autovacuum launcher autovacuum进程</li><li>stats collector 统计信息收集进程</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;一、引言&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;PostgreSQL是最像Oracle的开源数据库，我们可以拿&lt;a href=&quot;https://cloud.tencent.com/product/cdb?from=10680&quot; target=&quot;_blan
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PostgreSQL安装</title>
    <link href="https://husky-wu.github.io/2020/12/17/PostgreSQL/PostgreSQL%E5%AE%89%E8%A3%85/"/>
    <id>https://husky-wu.github.io/2020/12/17/PostgreSQL/PostgreSQL%E5%AE%89%E8%A3%85/</id>
    <published>2020-12-17T03:32:49.000Z</published>
    <updated>2020-12-17T03:33:53.494Z</updated>
    
    <content type="html"><![CDATA[<p>0.编译环境</p><ul><li>Linux: CentOS 5.5</li><li>gcc: 4.1.2</li></ul><p>\1. 安装PostgreSQL</p><p>1) 解压postgresql-9.1.7.tar.bz2</p><p>#tar jxvf postgresql-9.1.7.tar.bz2</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08202733-7c3361d8cbcd4b2f959792fbb70dc23f.png" alt="img" title="null"> </p><p>2) 进入解压后的postgresql-9.1.7目录</p><p>#cd postgresql-9.1.7</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08203207-9476995af40b4ea48327274a56fdef1c.png" alt="img" title="null"></p><p>3) 编译postgresql源码</p><p>#./configure –prefix=/opt/pgsql-9.1.7</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08203421-de028547596248e18be3e71612735bd9.png" alt="img" title="null"></p><p> #make</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08203554-73b3c8228b4646b0a88093259c8e944e.png" alt="img" title="null"></p><p>#make install</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08204027-dcaaa0db153449aeb70d74277f27643e.png" alt="img" title="null"></p><p>至此，完成postgresql的安装。进入/opt/pgsql-9.1.7目录可以看到安装后的postgresql的文件。</p><p>#ls /opt/pgsql-9.1.7</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08204237-c49c111409d34b14bf2ec74757dc4d28.png" alt="img" title="null"></p><p>2.创建postgresql数据库</p><p>1) 创建postgres用户</p><p>#useradd postgres</p><p>修改postgres密码</p><p>#passwd postgres</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08204847-216d541c19094bcab1ab5d8670602df8.png" alt="img" title="null"></p><p>2) 设置postgres用户的环境变量</p><p>切换到postgres用户</p><p>#su - postgres</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08205000-34c857e7999d4fd0bc8823420dfec10f.png" alt="img" title="null"></p><p>进入postgres的主目录</p><p>#cd ~</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08205236-f8990963882947fc95e787952f112ded.png" alt="img" title="null"></p><p>编辑~/.bash_profile文件</p><p>#vi ~/.bash_profile</p><p>设置以下的环境变量</p><p>export PGHOME=/opt/pgsql-9.1.7</p><p>export PGDATA=~/data</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08205529-a7e7098342c141a8b8413f1ea0e3f8a4.png" alt="img" title="null"></p><p>保存，退出vi。执行以下命令，使环境变量生效</p><p>#source ~/.bash_profile</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08205650-8095f3f6f47b492a8e82bdc6753a1609.png" alt="img" title="null"></p><p>3) 初始化postgres数据库</p><p>#initdb</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08205807-692f9228eab44d9db5652b58c1d8a635.png" alt="img" title="null"></p><p>至此，完成postgres数据库的初始化。</p><p>4) 启动postgres数据库实例</p><p>#pg_ctl start</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08210012-899114cc4f004b6a90d7882ab724af95.png" alt="img" title="null"></p><p>可以看到postgresql数据库实例已经启动，通过下面的命令可以查看系统中运行的postgres进程</p><p>#ps -ef | grep postgres</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08210441-700ef574b2be400db707702f6f58ba66.png" alt="img" title="null"></p><p>5) 连接postgresql数据库</p><p>#psql -h 127.0.0.1 -d postgres -U postgres</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08210147-7b3e91d3b9df494986ed32691f3110c0.png" alt="img" title="null"></p><p>6) 停止postgresql数据库实例</p><p>#pg_ctl stop</p><p>#ps -ef |  grep postgres</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/08210626-f42ab2ccfab441e5834ec9803d743aca.png" alt="img" title="null"></p><p>可以看到已经没有postgres进程</p><p>\3. 设置PostgreSQL开机自启动</p><p>PostgreSQL的开机自启动脚本位于PostgreSQL源码目录的contrib/start-scripts路径下</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/05172453-11c4443c7ef045dbb1b013ab3cdc4f8f.png" alt="img" title="null"></p><p>linux文件即为linux系统上的启动脚本</p><p>1）修改linux文件属性，添加X属性</p><p>#chmod a+x linux</p><p>2) 复制linux文件到/etc/init.d目录下，更名为postgresql</p><p>#cp linux /etc/init.d/postgresql</p><p>3）修改/etc/init.d/postgresql文件的两个变量</p><p>prefix设置为postgresql的安装路径：/opt/pgsql-9.1.2</p><p>PGDATA设置为postgresql的数据目录路径：</p><p><img src="../PostgreSQL%E5%AE%89%E8%A3%85/05172940-3a36ce9a2af746fa90ab1ceb31128a8d.png" alt="img" title="null"></p><p>4) 执行service postgresql start，就可以启动PostgreSQL服务</p><p>#service postgresql start</p><p> <img src="../PostgreSQL%E5%AE%89%E8%A3%85/05173131-1eb5af1328ac49d5b537ce9536a335bd.png" alt="img" title="null"></p><p>5）设置postgresql服务开机自启动</p><p>#chkconfig –add postgresql</p><p>执行上面的命令，就可以实现postgresql服务的开机自启动。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;0.编译环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux: CentOS 5.5&lt;/li&gt;
&lt;li&gt;gcc: 4.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;\1. 安装PostgreSQL&lt;/p&gt;
&lt;p&gt;1) 解压postgresql-9.1.7.tar.bz2&lt;/p&gt;
&lt;p&gt;#tar
      
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://husky-wu.github.io/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL备份恢复</title>
    <link href="https://husky-wu.github.io/2020/12/17/PostgreSQL/PostgreSQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/"/>
    <id>https://husky-wu.github.io/2020/12/17/PostgreSQL/PostgreSQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/</id>
    <published>2020-12-17T03:06:59.000Z</published>
    <updated>2020-12-17T03:10:02.534Z</updated>
    
    <content type="html"><![CDATA[<h2 id="逻辑备份恢复"><a href="#逻辑备份恢复" class="headerlink" title="逻辑备份恢复"></a>逻辑备份恢复</h2><h3 id="1-逻辑备份"><a href="#1-逻辑备份" class="headerlink" title="1.逻辑备份"></a>1.逻辑备份</h3><p>1.1登录数据库服务器</p><h3 id="2-逻辑恢复"><a href="#2-逻辑恢复" class="headerlink" title="2.逻辑恢复"></a>2.逻辑恢复</h3><h2 id="物理备份恢复"><a href="#物理备份恢复" class="headerlink" title="物理备份恢复"></a>物理备份恢复</h2><h3 id="1-物理备份"><a href="#1-物理备份" class="headerlink" title="1.物理备份"></a>1.物理备份</h3><h3 id="2-物理恢复"><a href="#2-物理恢复" class="headerlink" title="2.物理恢复"></a>2.物理恢复</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;逻辑备份恢复&quot;&gt;&lt;a href=&quot;#逻辑备份恢复&quot; class=&quot;headerlink&quot; title=&quot;逻辑备份恢复&quot;&gt;&lt;/a&gt;逻辑备份恢复&lt;/h2&gt;&lt;h3 id=&quot;1-逻辑备份&quot;&gt;&lt;a href=&quot;#1-逻辑备份&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
    
      <category term="postgresql" scheme="https://husky-wu.github.io/tags/postgresql/"/>
    
      <category term="备份恢复" scheme="https://husky-wu.github.io/tags/%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>hexo-markdown图片路径设置-通用</title>
    <link href="https://husky-wu.github.io/2020/12/16/hexo/hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/"/>
    <id>https://husky-wu.github.io/2020/12/16/hexo/hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/</id>
    <published>2020-12-16T09:10:57.000Z</published>
    <updated>2020-12-17T02:51:57.985Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="一、Markdown图像（截图-复制图）路径设置"><a href="#一、Markdown图像（截图-复制图）路径设置" class="headerlink" title="一、Markdown图像（截图/复制图）路径设置"></a>一、Markdown图像（截图/复制图）路径设置</h2><blockquote><p>工具：Typora</p><p>官网：<a href="https://typora.io/" target="_blank" rel="noopener">https://typora.io/</a></p></blockquote><h3 id="1-文件-偏好设置"><a href="#1-文件-偏好设置" class="headerlink" title="1.文件-偏好设置"></a>1.文件-偏好设置</h3><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216171315068.png" alt="image-20201216171315068" title="null"></p><h3 id="2-偏好设置-图像"><a href="#2-偏好设置-图像" class="headerlink" title="2.偏好设置-图像"></a>2.偏好设置-图像</h3><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216171559060.png" alt="image-20201216171559060" title="null"></p><p>如上图，插入图片时：<strong>复制到指定路径</strong></p><p><strong>路径填写</strong>：./${filename}</p><p>勾选以下3项功能</p><ul><li><input checked disabled type="checkbox"> 对本地位置的图片应用上述规则</li><li><input checked disabled type="checkbox"> 对网络位置的图片应用上述规则</li><li><input checked disabled type="checkbox"> 优先使用相对路径</li></ul><h3 id="3-关闭偏好设置"><a href="#3-关闭偏好设置" class="headerlink" title="3.关闭偏好设置"></a>3.关闭偏好设置</h3><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216172048094.png" alt="image-20201216172048094" title="null"></p><h3 id="4-将截图复制到markdown中"><a href="#4-将截图复制到markdown中" class="headerlink" title="4.将截图复制到markdown中"></a>4.将截图复制到markdown中</h3><p>可以看到图片路径为如下格式：![图片文件名]+(文档名/图片文件名.png)</p><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216172147595.png" alt="image-20201216172147595" title="null"></p><h2 id="二、更改hexo格式转换文件"><a href="#二、更改hexo格式转换文件" class="headerlink" title="二、更改hexo格式转换文件"></a>二、更改hexo格式转换文件</h2><h3 id="1-找到marked-js文件"><a href="#1-找到marked-js文件" class="headerlink" title="1.找到marked.js文件"></a>1.找到marked.js文件</h3><p>路径：node_modules\marked\lib\marked.js</p><h3 id="2-打开marked-js编辑"><a href="#2-打开marked-js编辑" class="headerlink" title="2.打开marked.js编辑"></a>2.打开marked.js编辑</h3><p>找到如下代码部分，该代码块为 hexo g时，转换markdown的语法逻辑</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Renderer.prototype.image = function(href, title, text) &#123;</span><br><span class="line">  href = cleanUrl(<span class="keyword">this</span>.options.sanitize, <span class="keyword">this</span>.options.baseUrl, href);</span><br><span class="line">  <span class="keyword">if</span> (href === <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> text;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> out = <span class="string">'&lt;img src="'</span> + href + <span class="string">'" alt="'</span> + text + <span class="string">'"'</span>;</span><br><span class="line">  <span class="keyword">if</span> (title) &#123;</span><br><span class="line">    out += <span class="string">' title="'</span> + title + <span class="string">'"'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  out += <span class="keyword">this</span>.options.xhtml ? <span class="string">'/&gt;'</span> : <span class="string">'&gt;'</span>;</span><br><span class="line">  <span class="keyword">return</span> out;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>本次操作中将该部分注释掉，并替换为以下代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Renderer.prototype.image = function(href, title, text) &#123;</span><br><span class="line">  href = cleanUrl(<span class="keyword">this</span>.options.sanitize, <span class="keyword">this</span>.options.baseUrl, href);</span><br><span class="line">  <span class="keyword">if</span> (href === <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> text;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (href.substr(<span class="number">0</span>,<span class="number">7</span>)==<span class="string">"http://"</span> || href.substr(<span class="number">0</span>,<span class="number">8</span>)==<span class="string">"https://"</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> out = <span class="string">'&lt;img src="'</span> + href + <span class="string">'" alt="'</span> + text + <span class="string">'"'</span>;</span><br><span class="line">    out += <span class="string">' title="'</span> + title + <span class="string">'"'</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> out = <span class="string">'&lt;img src="'</span>+<span class="string">'../'</span> + href + <span class="string">'" alt="'</span> + text + <span class="string">'"'</span>;</span><br><span class="line">    out += <span class="string">' title="'</span> + title + <span class="string">'"'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (title) &#123;</span><br><span class="line">    out += <span class="string">' title="'</span> + title + <span class="string">'"'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  out += <span class="keyword">this</span>.options.xhtml ? <span class="string">'/&gt;'</span> : <span class="string">'&gt;'</span>;</span><br><span class="line">  <span class="keyword">return</span> out;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>即，在hexo d后 将markdown图片路径(非http或https网页路径)前添加“../”字符，转换为github中文件路径（此部分可能会由于不同的主题而有所不同，请根据主题生成后的路径格式进行修改）</p><h3 id="3-查看生成的index-html文件中img格式"><a href="#3-查看生成的index-html文件中img格式" class="headerlink" title="3.查看生成的index.html文件中img格式"></a>3.查看生成的index.html文件中img格式</h3><p>未更改前markdown中路径：</p><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216190102646.png" alt="image-20201216190102646" title="null"></p><p>未更改前渲染出的index.html img路径格式：</p><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216190724822.png" alt="image-20201216190724822" title="null"></p><p>未更改前渲染出的index.html img路径web显示：</p><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216190813849.png" alt="image-20201216190813849" title="null"></p><p>更改后渲染出的index.html img路径格式：</p><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216185950343.png" alt="image-20201216185950343" title="null"></p><p>更改后渲染出的index.html img路径web显示：</p><p><img src="../hexo-markdown%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E8%AE%BE%E7%BD%AE-%E9%80%9A%E7%94%A8/image-20201216191010281.png" alt="image-20201216191010281" title="null"></p><p>以上，分享完毕，希望可以帮助到各位😁</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;一、Markdown图像（截图-复制图）路径设置&quot;&gt;&lt;a href=&quot;#一、Markdown图像（截图-复制图）路径设置&quot; class=&quot;headerlink&quot; title=&quot;一、Markdown图像（截图/复制图）路径设置&quot;&gt;&lt;/a&gt;一
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://husky-wu.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://husky-wu.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo引入fancybox优化图片视频查看效果</title>
    <link href="https://husky-wu.github.io/2020/12/16/hexo/hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C/"/>
    <id>https://husky-wu.github.io/2020/12/16/hexo/hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C/</id>
    <published>2020-12-16T08:05:24.000Z</published>
    <updated>2020-12-16T11:36:32.558Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>sakura</p></blockquote><blockquote><p><img src="../hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C/20200304171456717.png" alt="在这里插入图片描述" title="null"></p></blockquote><h1 id="一、fancybox介绍"><a href="#一、fancybox介绍" class="headerlink" title="一、fancybox介绍"></a>一、fancybox介绍</h1><p>在我们平常阅读博文时，常遇到：<code>图片太小，字看不清</code>的情况<br><img src="../hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C/20200304165730518.png" alt="在这里插入图片描述" title="null"><br>不怕，fancybox可以将你的图片放大！<br><img src="../hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C/20200304165838704.png" alt="在这里插入图片描述" title="null"><br>强大的相册功能！<br><img src="../hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C/20200304170123126.png" alt="在这里插入图片描述" title="null"><br>原理：给所有图片加一层a标签，并链接图片地址到蒙版层面上</p><p>简单源码：（多图）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">！DOCTYPE</span> <span class="attr">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> =<span class="string">“</span> <span class="attr">utf-8</span>”&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>我的页面<span class="tag">&lt;/ <span class="attr">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--CSS--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span> =<span class="string">“</span> <span class="attr">stylesheet</span>” <span class="attr">type</span> =<span class="string">“</span> <span class="attr">text</span> / <span class="attr">css</span>” <span class="attr">href</span> =<span class="string">“</span> <span class="attr">jquery.fancybox.min.css</span>”&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 一组图片 ，a标签的data-fancybox属性很重要 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"image_1.jpg"</span> <span class="attr">data-fancybox</span>=<span class="string">"gallery"</span> <span class="attr">data-caption</span>=<span class="string">"Caption #1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"thumbnail_1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"image_2.jpg"</span> <span class="attr">data-fancybox</span>=<span class="string">"gallery"</span> <span class="attr">data-caption</span>=<span class="string">"Caption #2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"thumbnail_2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">！-JS-</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span> </span></span></span><br><span class="line"><span class="javascript">$(<span class="string">'[data-fancybox="images"]'</span>).fancybox(&#123;</span></span><br><span class="line">    thumbs : &#123;</span><br><span class="line"><span class="actionscript">      autoStart : <span class="literal">true</span> <span class="comment">//缩略图</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="javascript">  $(<span class="string">'[data-fancybox]'</span>).fancybox(&#123;</span></span><br><span class="line"><span class="actionscript">    protect: <span class="literal">true</span>,<span class="comment">//图片右键不能下载</span></span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">1234567891011121314151617181920212223242526272829303132</span><br></pre></td></tr></table></figure><p>视频：（弹窗播放）<br><img src="../hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C/20200304173854714.png" alt="在这里插入图片描述" title="null"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">！DOCTYPE</span> <span class="attr">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> =<span class="string">“</span> <span class="attr">utf-8</span>”&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>我的页面<span class="tag">&lt;/ <span class="attr">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--CSS--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span> =<span class="string">“</span> <span class="attr">stylesheet</span>” <span class="attr">type</span> =<span class="string">“</span> <span class="attr">text</span> / <span class="attr">css</span>” <span class="attr">href</span> =<span class="string">“</span> <span class="attr">jquery.fancybox.min.css</span>”&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-fancybox</span> <span class="attr">href</span>=<span class="string">"https://www.youtube.com/watch?v=_sI_Ps7JSEk"</span>&gt;</span></span><br><span class="line">    YouTube video</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-fancybox</span> <span class="attr">href</span>=<span class="string">"https://vimeo.com/191947042"</span>&gt;</span></span><br><span class="line">    Vimeo video</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-fancybox</span> <span class="attr">data-width</span>=<span class="string">"640"</span> <span class="attr">data-height</span>=<span class="string">"360"</span> <span class="attr">href</span>=<span class="string">"video.mp4"</span>&gt;</span></span><br><span class="line">    Direct link to MP4 video</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-fancybox</span> <span class="attr">href</span>=<span class="string">"#myVideo"</span>&gt;</span></span><br><span class="line">    HTML5 video element</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"320"</span> <span class="attr">controls</span> <span class="attr">id</span>=<span class="string">"myVideo"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"https://www.html5rocks.com/en/tutorials/video/basics/Chrome_ImF.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"https://www.html5rocks.com/en/tutorials/video/basics/Chrome_ImF.webm"</span> <span class="attr">type</span>=<span class="string">"video/webm"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"https://www.html5rocks.com/en/tutorials/video/basics/Chrome_ImF.ogv"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span>&gt;</span></span><br><span class="line">    Your browser doesn't support HTML5 video tag.</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- fancybox大图查看 需jq --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/jquery.fancybox.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  $(<span class="string">'[data-fancybox]'</span>).fancybox(&#123;</span></span><br><span class="line">    youtube : &#123;</span><br><span class="line">        controls : 0,</span><br><span class="line">        showinfo : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    vimeo : &#123;</span><br><span class="line"><span class="actionscript">        color : <span class="string">'f00'</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">123456789101112131415161718192021222324252627282930313233343536373839404142434445</span><br></pre></td></tr></table></figure><blockquote><p>文档：<a href="https://fancyapps.com/fancybox/3/docs/" target="_blank" rel="noopener">https://fancyapps.com/fancybox/3/docs/</a><br>中文翻译参考：<a href="https://salongweb.com/fancybox3.html" target="_blank" rel="noopener">jQuery 强大丰富的响应式弹出框插件 fancyBox3</a><br>很详尽很丰富，拿到手又有一点头大！本文是hexo-sakura主题博客整合fancybox插件实例的教程！</p></blockquote><h1 id="二、hexo中添加fancybox"><a href="#二、hexo中添加fancybox" class="headerlink" title="二、hexo中添加fancybox"></a>二、hexo中添加fancybox</h1><h2 id="1-添加引用"><a href="#1-添加引用" class="headerlink" title="1. 添加引用"></a>1. 添加引用</h2><ol><li><p>分别在head.ejs和footer.ejs：删去zoom引用，只保留fancybox；<br><img src="../hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C/20200304172702740.png" alt="在这里插入图片描述" title="null"></p></li><li><p>在footer中添加cdn加速版jQuery引用</p><p>完整的引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/css/jquery.fancybox.min.css"</span> <span class="attr">media</span>=<span class="string">"all"</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!-- fancybox大图查看 需jq --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/jquery.fancybox.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  $(<span class="string">'[data-fancybox="images"]'</span>).fancybox(&#123;<span class="comment">//可选</span></span></span><br><span class="line">    thumbs : &#123;</span><br><span class="line"><span class="actionscript">      autoStart : <span class="literal">true</span> <span class="comment">//缩略图</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="javascript">  $(<span class="string">'[data-fancybox]'</span>).fancybox(&#123;<span class="comment">//启用函数，必须</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//protect: true //图片右键不能下载，可选</span></span></span><br><span class="line">  &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">123456789101112131415</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2.修改配置"></a>2.修改配置</h2><p>hexo是md格式文件生成的静态页面，<br>说明一下<code>node_modules\marked\lib\marked.js</code>这个函数的作用：</p><ul><li><p>marked.js是一个用JavaScript写的功能齐全的Markdown解析器和编译器。可以非常方便的在线编译Markdown代码为HTML并直接显示，并且支持完全的自定义各种格式。</p></li><li><p>它的作用：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">在这里插入图片描述</span>](<span class="link">https://img-blog.csdnimg.cn/20200304135000622.png</span>)</span><br><span class="line">转换成：</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-action</span>=<span class="string">"zoom"</span> <span class="attr">src</span>=<span class="string">"https://img-blog.csdnimg.cn/20200304135000622.png"</span> <span class="attr">alt</span>=<span class="string">"在这里插入图片描述"</span>&gt;</span></span></span><br><span class="line">123</span><br></pre></td></tr></table></figure></li></ul><p>我们要进一步转换成含a标签的fancybox可调用的样式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-fancybox</span>=<span class="string">"gallery"</span> <span class="attr">rel</span>=<span class="string">"group1 noopener"</span> <span class="attr">href</span>=<span class="string">"https://img-blog.csdnimg.cn/20200304135000622.png"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-action</span>=<span class="string">"zoom"</span> <span class="attr">src</span>=<span class="string">"https://img-blog.csdnimg.cn/20200304135000622.png"</span> <span class="attr">alt</span>=<span class="string">"在这里插入图片描述"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">123</span><br></pre></td></tr></table></figure><ol><li><p>修改静态文件</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node_modules\marked\<span class="class"><span class="keyword">lib</span>\<span class="title">marked</span>.<span class="title">js</span></span></span><br></pre></td></tr></table></figure><p>ctrl+F 搜索</p></li></ol>   <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Renderer</span><span class="selector-class">.prototype</span><span class="selector-class">.image</span></span><br></pre></td></tr></table></figure><p>   函数，修改如下：</p>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Renderer.prototype.image = <span class="function"><span class="keyword">function</span>(<span class="params">href, title, text</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);</span></span><br><span class="line">  <span class="comment">// if (href === null) &#123;</span></span><br><span class="line">  <span class="comment">//   return text;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// var out = '&lt;img src="' + href + '" alt="' + text + '"';</span></span><br><span class="line">  <span class="comment">// if (title) &#123;</span></span><br><span class="line">  <span class="comment">//   out += ' title="' + title + '"';</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// out += this.options.xhtml ? '/&gt;' : '&gt;';</span></span><br><span class="line">  <span class="comment">// return out;</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.options.baseUrl &amp;&amp; !originIndependentUrl.test(href)) &#123;</span><br><span class="line">    href = resolveUrl(<span class="keyword">this</span>.options.baseUrl, href);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> out = <span class="string">'&lt;a data-fancybox="gallery" data-caption="'</span>+text+<span class="string">'" href="'</span>+href+<span class="string">'"&gt;&lt;img data-action="zoom" src="'</span> + href + <span class="string">'" alt="'</span> + text + <span class="string">'"'</span>;</span><br><span class="line">  <span class="keyword">if</span> (title) &#123;</span><br><span class="line">    out += <span class="string">' title="'</span> + title + <span class="string">'"'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  out += <span class="keyword">this</span>.options.xhtml ? <span class="string">'/&gt;&lt;/a&gt;'</span> : <span class="string">'&gt;&lt;/a&gt;'</span>;</span><br><span class="line">  <span class="keyword">return</span> out;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="number">12345678910111213141516171819202122</span></span><br></pre></td></tr></table></figure><p>   现在已经大功告成，可以实现效果了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;sakura&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;../hexo%E5%BC%95%E5%85%A5fancybox%E4%BC%98%E5%8C%96%E5%9B%BE%E7%89%87%E8%
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://husky-wu.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://husky-wu.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>TiDB4.0课程学习-1.2HTAP 数据库简介</title>
    <link href="https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/"/>
    <id>https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/</id>
    <published>2020-12-15T06:37:05.000Z</published>
    <updated>2020-12-15T08:15:52.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TiDB4-0课程学习-1-2HTAP-数据库简介"><a href="#TiDB4-0课程学习-1-2HTAP-数据库简介" class="headerlink" title="TiDB4.0课程学习-1.2HTAP 数据库简介"></a>TiDB4.0课程学习-1.2HTAP 数据库简介</h1><h1 id="1-2-What’s-an-HTAP-Database-（HTAP-数据库简介）"><a href="#1-2-What’s-an-HTAP-Database-（HTAP-数据库简介）" class="headerlink" title="1.2 What’s an HTAP Database? （HTAP 数据库简介）"></a>1.2 What’s an HTAP Database? （HTAP 数据库简介）</h1><p>1.2 Why HTAP Matters（HTAP 数据库简介）</p><p>本课程简要介绍了 HTAP 意义，技术难点，TiDB 如何实现 HTAP 以及相关的应用场景。</p><p>学习目标： 帮助学员熟悉 HTAP 领域</p><p>关键知识点： HTAP意义；设计原则以及应用场景</p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608017679648.png" alt="1608017679648" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608017694088.png" alt="1608017694088" title="null"></p><p>为什么需要HTAP</p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608017705769.png" alt="1608017705769" title="null"></p><h2 id="1-什么是HTAP"><a href="#1-什么是HTAP" class="headerlink" title="1.什么是HTAP"></a>1.什么是HTAP</h2><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608017751049.png" alt="1608017751049" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608017770563.png" alt="1608017770563" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018032170.png" alt="1608018032170" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018152055.png" alt="1608018152055" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018162512.png" alt="1608018162512" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018180511.png" alt="1608018180511" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018685434.png" alt="1608018685434" title="null"></p><p>紧密耦合/实时更新查询</p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018788906.png" alt="1608018788906" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018812567.png" alt="1608018812567" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018834838.png" alt="1608018834838" title="null"></p><p>1.可更新的列存引擎，列存副本</p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018873480.png" alt="1608018873480" title="null"></p><p>RAFT Group协议</p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608018931104.png" alt="1608018931104" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.2HTAP%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B/1608019072039.png" alt="1608019072039" title="null"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TiDB4-0课程学习-1-2HTAP-数据库简介&quot;&gt;&lt;a href=&quot;#TiDB4-0课程学习-1-2HTAP-数据库简介&quot; class=&quot;headerlink&quot; title=&quot;TiDB4.0课程学习-1.2HTAP 数据库简介&quot;&gt;&lt;/a&gt;TiDB4.0课程学习
      
    
    </summary>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/categories/TiDB/"/>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/tags/TiDB/"/>
    
      <category term="学习课程" scheme="https://husky-wu.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="分布式" scheme="https://husky-wu.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>TiDB4.0课程学习-1.1分布式数据库发展简史</title>
    <link href="https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/"/>
    <id>https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/</id>
    <published>2020-12-15T06:37:05.000Z</published>
    <updated>2020-12-16T08:31:04.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TiDB4-0课程学习-1-1分布式数据库发展简史"><a href="#TiDB4-0课程学习-1-1分布式数据库发展简史" class="headerlink" title="TiDB4.0课程学习-1.1分布式数据库发展简史"></a>TiDB4.0课程学习-1.1分布式数据库发展简史</h1><h1 id="1-1-A-Brief-History-of-Distributed-Database-（分布式数据库发展简史）"><a href="#1-1-A-Brief-History-of-Distributed-Database-（分布式数据库发展简史）" class="headerlink" title="1.1 A Brief History of Distributed Database （分布式数据库发展简史）"></a>1.1 A Brief History of Distributed Database （分布式数据库发展简史）</h1><p>本课程简要介绍了从 20 世纪到 21 世纪分布式数据库的发展历史</p><p>学习目标： 帮助学员了解分布式数据库的发展历史</p><p>关键知识点： 分布式数据库历史，NoSQL 和 NewSQL，OLTP 和 HTAP，新技术</p><p>讲师：冯立元 老师</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608017038570.png" alt="1608017038570" title="null"></p><p><strong>20世纪初：</strong></p><ul><li>数据库业态环境 以 OLTP为主</li><li>基于SQL交互</li><li>单节点/资源共享</li><li>事务量小，并发低，单机数据库，共享硬件资源</li></ul><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608017052739.png" alt="1608017052739" title="null"></p><p><strong>21世纪-互联网时代：</strong></p><ul><li>随着业务量并发的增加，开始发展中间件和多节点数据库</li></ul><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608017108495.png" alt="1608017108495" title="null"></p><p><strong>21世纪-互联网时代：</strong></p><ul><li>随着数据量暴增，开始发展大数据与数据仓库 </li><li>基于编程语言API交互</li></ul><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608017153000.png" alt="1608017153000" title="null"></p><p><strong>21世纪-互联网时代同期：</strong></p><ul><li><p>数据量进一步增加，同时衍生出大数据分析的需求-OLAP：按列存储</p></li><li><p>基于SQL进行交互</p></li><li><p>资源独享</p></li><li><p>列式存储</p></li><li><p>OLAP工作</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608017181324.png" alt="1608017181324" title="null"></p></li></ul><p><strong>21世纪-互联网时代同期：</strong></p><ul><li><p>nosql兴起：高可用 key-value，互联网环境中 复制的 可靠性和可拓展性相比于业务的发展以及高性能高可用的需求，不再那么的重要</p></li><li><p>基于键值对API交互</p></li><li><p>非事务，非关系型，非schema</p></li><li><p>高性能</p></li><li><p>高可用性</p></li><li><p>资源独享</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608017226054.png" alt="1608017226054" title="null"></p></li></ul><p><strong>2010年：</strong></p><p>随着OLTP和OLAP数据库的发展，发展了混合型分析型数据库，NewSQL应运而生，其不再局限于仅支持OLTP的ACID事务</p><ul><li>基于SQL交互</li><li>资源独享</li></ul><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608017333277.png" alt="1608017333277" title="null"></p><p><strong>TiDB即NewSQL 数据库的一种：</strong></p><ul><li>基于SQL交互</li><li>OLTP&amp;OLAP工作</li><li>资源独享</li><li>高性能</li><li>高可用性</li></ul><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608017383014.png" alt="1608017383014" title="null"></p><p>思维导图：</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.1%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/image-20201215183543479.png" alt="image-20201215183543479" title="null"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TiDB4-0课程学习-1-1分布式数据库发展简史&quot;&gt;&lt;a href=&quot;#TiDB4-0课程学习-1-1分布式数据库发展简史&quot; class=&quot;headerlink&quot; title=&quot;TiDB4.0课程学习-1.1分布式数据库发展简史&quot;&gt;&lt;/a&gt;TiDB4.0课程学习
      
    
    </summary>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/categories/TiDB/"/>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/tags/TiDB/"/>
    
      <category term="学习课程" scheme="https://husky-wu.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="分布式" scheme="https://husky-wu.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>TiDB4.0课程学习-1.6TiDB中的读写流程</title>
    <link href="https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/"/>
    <id>https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/</id>
    <published>2020-12-15T06:37:05.000Z</published>
    <updated>2020-12-17T15:20:47.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-6-Read-and-Write-data-in-the-TiDB-database-platform（TiDB-中的读写流程）"><a href="#1-6-Read-and-Write-data-in-the-TiDB-database-platform（TiDB-中的读写流程）" class="headerlink" title="1.6 Read and Write data in the TiDB database platform（TiDB 中的读写流程）"></a>1.6 Read and Write data in the TiDB database platform（TiDB 中的读写流程）</h2><p>本课程主要包括 TiDB 架构的简单介绍、各个组件的作用，以及读写请求在 TiDB 中的过程</p><p>学习目标： 对 TiDB 整体架构以及读写路程有大概的了解</p><p>关键知识点： TiDB 架构；读写流程</p><p>讲师：沈刚</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231422935.png" alt="image-20201217231422935" title="null"></p><p>TiDB 中的读写流程</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231406645.png" alt="image-20201217231406645" title="null"></p><p>写在开始前</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231500384.png" alt="image-20201217231500384" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231514028.png" alt="image-20201217231514028" title="null"></p><p>TiDB概览图</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231543640.png" alt="image-20201217231543640" title="null"></p><p>tidb不提供负载均衡功能</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231614574.png" alt="image-20201217231614574" title="null"></p><p><strong>TIDB组件功能</strong></p><p>TiKV</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231709330.png" alt="image-20201217231709330" title="null"></p><p>PD</p><p>高可用</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231740663.png" alt="image-20201217231740663" title="null"></p><h2 id="第二部分：TiDB读请求"><a href="#第二部分：TiDB读请求" class="headerlink" title="第二部分：TiDB读请求"></a>第二部分：TiDB读请求</h2><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231816472.png" alt="image-20201217231816472" title="null"></p><p>SQL 进程流</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231853548.png" alt="image-20201217231853548" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217231927508.png" alt="image-20201217231927508" title="null"></p><p>第三部分：写请求在TIDB中的处理过程</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217232007846.png" alt="image-20201217232007846" title="null"></p><p>写请求在TIDB中的处理过程</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.6TiDB%E4%B8%AD%E7%9A%84%E8%AF%BB%E5%86%99%E6%B5%81%E7%A8%8B/image-20201217232019691.png" alt="image-20201217232019691" title="null"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-6-Read-and-Write-data-in-the-TiDB-database-platform（TiDB-中的读写流程）&quot;&gt;&lt;a href=&quot;#1-6-Read-and-Write-data-in-the-TiDB-database-platform（
      
    
    </summary>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/categories/TiDB/"/>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/tags/TiDB/"/>
    
      <category term="学习课程" scheme="https://husky-wu.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="分布式" scheme="https://husky-wu.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>TiDB4.0课程学习-1.3TiDB发展简史</title>
    <link href="https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.3TiDB%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/"/>
    <id>https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.3TiDB%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/</id>
    <published>2020-12-15T06:37:05.000Z</published>
    <updated>2020-12-15T09:41:25.174Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TiDB4-0课程学习-1-3TiDB发展简史"><a href="#TiDB4-0课程学习-1-3TiDB发展简史" class="headerlink" title="TiDB4.0课程学习-1.3TiDB发展简史"></a>TiDB4.0课程学习-1.3TiDB发展简史</h1><h1 id="1-3-A-Brief-History-About-the-TiDB-database-platform（TiDB-发展简史）"><a href="#1-3-A-Brief-History-About-the-TiDB-database-platform（TiDB-发展简史）" class="headerlink" title="1.3 A Brief History About the TiDB database platform（TiDB 发展简史）"></a>1.3 A Brief History About the TiDB database platform（TiDB 发展简史）</h1><p>本课程简要介绍了 TiDB 的发展历史。自从 v1.0.0 GA 开始，TiDB 做到了：可以从计算和存储两个层面的无限扩展，兼容了 MySQL 的语法和协议，强一致的真分布式事务。到今天，TiDB 可以称为一个真正的 HTAP 系统，不需要 ETL 工具进行数据转换，在系统运行 OLTP 业务时，也可以方便的进行报表查询。</p><p>学习目标： 了解 TiDB 的发展历史</p><p>关键知识点： TiDB；HTAP；数据中台；TiSpark；TiFlash</p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.3TiDB%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608019448683.png" alt="1608019448683" title="null"></p><p><img src=".././TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.3TiDB%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2/1608019559741.png" alt="1608019559741" title="null"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TiDB4-0课程学习-1-3TiDB发展简史&quot;&gt;&lt;a href=&quot;#TiDB4-0课程学习-1-3TiDB发展简史&quot; class=&quot;headerlink&quot; title=&quot;TiDB4.0课程学习-1.3TiDB发展简史&quot;&gt;&lt;/a&gt;TiDB4.0课程学习-1.3Ti
      
    
    </summary>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/categories/TiDB/"/>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/tags/TiDB/"/>
    
      <category term="学习课程" scheme="https://husky-wu.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="分布式" scheme="https://husky-wu.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>TiDB4.0课程学习-1.7TiDB 典型应用场景及用户案例</title>
    <link href="https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/"/>
    <id>https://husky-wu.github.io/2020/12/15/TiDB4.0/TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/</id>
    <published>2020-12-15T06:37:05.000Z</published>
    <updated>2020-12-17T15:45:25.055Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-7-Use-cases-and-success-stories-with-the-TiDB（TiDB-典型应用场景及用户案例）"><a href="#1-7-Use-cases-and-success-stories-with-the-TiDB（TiDB-典型应用场景及用户案例）" class="headerlink" title="1.7 Use cases and success stories with the TiDB（TiDB 典型应用场景及用户案例）"></a>1.7 Use cases and success stories with the TiDB（TiDB 典型应用场景及用户案例）</h2><p>本课程简要介绍了 TiDB 的适用场景及用户案例。 从 TiDB 具有的可扩展性，高可用性，分布式事务，实时分析等特点出发，总结出 TiDB 的各种适用场景。在海量数据，高并发等大规模集群中，TiDB 能够体现出超强的处理能力。同时基于 HTAP 的架构设计，TiDB 也非常适合作为实时分析类系统的数据库。</p><p>学习目标： 了解 TiDB 的特性及适用的场景</p><p>关键知识点： TiDB；HTAP；用户案例</p><p>讲师：马靖钰</p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232332251.png" alt="image-20201217232332251" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232440249.png" alt="image-20201217232440249" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232525276.png" alt="image-20201217232525276" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232536177.png" alt="image-20201217232536177" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232544965.png" alt="image-20201217232544965" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232555328.png" alt="image-20201217232555328" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232605168.png" alt="image-20201217232605168" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232615716.png" alt="image-20201217232615716" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232627421.png" alt="image-20201217232627421" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232647186.png" alt="image-20201217232647186" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232655870.png" alt="image-20201217232655870" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232724134.png" alt="image-20201217232724134" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232747818.png" alt="image-20201217232747818" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232806492.png" alt="image-20201217232806492" title="null"></p><p><img src="../TiDB4.0%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0-1.7TiDB%E5%85%B8%E5%9E%8B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E5%8F%8A%E7%94%A8%E6%88%B7%E6%A1%88%E4%BE%8B/image-20201217232836383.png" alt="image-20201217232836383" title="null"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-7-Use-cases-and-success-stories-with-the-TiDB（TiDB-典型应用场景及用户案例）&quot;&gt;&lt;a href=&quot;#1-7-Use-cases-and-success-stories-with-the-TiDB（TiDB-典型
      
    
    </summary>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/categories/TiDB/"/>
    
    
      <category term="TiDB" scheme="https://husky-wu.github.io/tags/TiDB/"/>
    
      <category term="学习课程" scheme="https://husky-wu.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="分布式" scheme="https://husky-wu.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Oracle-DataGuard-Rman-auxiliary搭建备库</title>
    <link href="https://husky-wu.github.io/2020/05/25/Oracle/Oracle-DataGuard-Rman-auxiliary%E6%90%AD%E5%BB%BA%E5%A4%87%E5%BA%93/"/>
    <id>https://husky-wu.github.io/2020/05/25/Oracle/Oracle-DataGuard-Rman-auxiliary%E6%90%AD%E5%BB%BA%E5%A4%87%E5%BA%93/</id>
    <published>2020-05-25T06:37:05.000Z</published>
    <updated>2020-06-22T03:22:13.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-环境介绍"><a href="#1-环境介绍" class="headerlink" title="1.环境介绍"></a>1.环境介绍</h2><p>百货–数据库服务器</p><table><thead><tr><th>实例名称</th><th>IP</th><th>账户</th><th>密码</th><th>db_name</th><th>db_unique_name</th><th>service_name</th></tr></thead><tbody><tr><td>zbds-baihuo-DB01</td><td>172.16.35.141</td><td>zyadmin</td><td><strong>**</strong></td><td>zbdsora</td><td>zbdsora</td><td>zbdsora</td></tr><tr><td>zbds-baihuo-DB02</td><td>172.16.35.140</td><td>zyadmin</td><td><strong>**</strong></td><td>zbdsora</td><td>zbdsora_std</td><td>zbdsora_std</td></tr></tbody></table><h2 id="2-DG部署"><a href="#2-DG部署" class="headerlink" title="2.DG部署"></a>2.DG部署</h2><h3 id="2-1-建立主库zbdsora"><a href="#2-1-建立主库zbdsora" class="headerlink" title="2.1.建立主库zbdsora"></a>2.1.建立主库zbdsora</h3><p>DBCA建立主库，修改online redo 大小为500M</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; <span class="builtin-name">set</span> linesize 160</span><br><span class="line"><span class="builtin-name">set</span> pagesize 2000</span><br><span class="line">col GROUP# <span class="keyword">for</span> 999</span><br><span class="line">col status <span class="keyword">for</span> a10</span><br><span class="line">col<span class="built_in"> TYPE </span><span class="keyword">for</span> a10</span><br><span class="line">col MEMBER <span class="keyword">for</span> a15</span><br><span class="line">col IS_RECOVERY_DEST_FILE <span class="keyword">for</span> a10</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> v<span class="variable">$log</span>;</span><br><span class="line">select * <span class="keyword">from</span> v<span class="variable">$logfile</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> alter database <span class="builtin-name">add</span> logfile thread 1<span class="built_in"> group </span>1 <span class="string">'/alidata/oradata/zbdsora/redo01.log'</span> size 500M;</span><br><span class="line"> alter database <span class="builtin-name">add</span> logfile thread 1<span class="built_in"> group </span>2 <span class="string">'/alidata/oradata/zbdsora/redo02.log'</span> size 500M;</span><br><span class="line"> alter database <span class="builtin-name">add</span> logfile thread 1<span class="built_in"> group </span>3 <span class="string">'/alidata/oradata/zbdsora/redo03.log'</span> size 500M;</span><br><span class="line"> alter database <span class="builtin-name">add</span> logfile thread 1<span class="built_in"> group </span>4 <span class="string">'/alidata/oradata/zbdsora/redo04.log'</span> size 500M;</span><br><span class="line"> alter database <span class="builtin-name">add</span> logfile thread 1<span class="built_in"> group </span>5 <span class="string">'/alidata/oradata/zbdsora/redo05.log'</span> size 500M;</span><br><span class="line"> </span><br><span class="line">alter database drop logfile<span class="built_in"> group </span>1;</span><br><span class="line">alter database drop logfile<span class="built_in"> group </span>2;</span><br><span class="line">alter database drop logfile<span class="built_in"> group </span>3;</span><br><span class="line"></span><br><span class="line">alter<span class="built_in"> system </span>switch logfile;</span><br><span class="line">alter<span class="built_in"> system </span>checkpoint;</span><br><span class="line">select group#,bytes,status <span class="keyword">from</span> v<span class="variable">$log</span>;</span><br></pre></td></tr></table></figure><h3 id="2-2-主库开启归档"><a href="#2-2-主库开启归档" class="headerlink" title="2.2.主库开启归档"></a>2.2.主库开启归档</h3><p>主库开启归档并设置强制日志 force logging</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--干净的关闭数据库</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; shutdown <span class="keyword">immediate</span></span><br><span class="line"><span class="comment">--以mount模式启动</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; startup mount</span><br><span class="line"><span class="comment">--切换到归档模式</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> archivelog;</span><br><span class="line"><span class="comment">--变更归档路径</span></span><br><span class="line"> <span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> log_archive_dest_1=<span class="string">'location=/alidata/arch'</span>;</span><br><span class="line"><span class="comment">--开启强制日志</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> force logging;</span><br><span class="line"><span class="comment">--打开数据库</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">open</span>;</span><br><span class="line"><span class="comment">--查看归档</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; archive <span class="keyword">log</span> list;</span><br><span class="line"><span class="comment">--查看是否为强制日志</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> force_logging <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br></pre></td></tr></table></figure><h3 id="2-3-主库添加Standby-Redo-Log"><a href="#2-3-主库添加Standby-Redo-Log" class="headerlink" title="2.3.主库添加Standby Redo Log"></a>2.3.主库添加Standby Redo Log</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--查看Redo和Standby Redo</span><br><span class="line">SQL&gt; select * <span class="keyword">from</span> v<span class="variable">$logfile</span>;</span><br><span class="line">--仅仅显示Online Redo，不显示Standby Redo</span><br><span class="line">SQL&gt; select * <span class="keyword">from</span> v<span class="variable">$log</span>;</span><br><span class="line">--新增一组大小为500M的Standby Redo，这里的group号不得与Online redo重复</span><br><span class="line">SQL&gt; alter database <span class="builtin-name">add</span> standby logfile<span class="built_in"> group </span>21 <span class="string">'/alidata/oradata/zbdsora/standby21.log'</span> size 500M;</span><br><span class="line">alter database <span class="builtin-name">add</span> standby logfile<span class="built_in"> group </span>22 <span class="string">'/alidata/oradata/zbdsora/standby22.log'</span> size 500M;</span><br><span class="line">alter database <span class="builtin-name">add</span> standby logfile<span class="built_in"> group </span>23 <span class="string">'/alidata/oradata/zbdsora/standby23.log'</span> size 500M;</span><br><span class="line">alter database <span class="builtin-name">add</span> standby logfile<span class="built_in"> group </span>24 <span class="string">'/alidata/oradata/zbdsora/standby24.log'</span> size 500M;</span><br><span class="line">alter database <span class="builtin-name">add</span> standby logfile<span class="built_in"> group </span>25 <span class="string">'/alidata/oradata/zbdsora/standby25.log'</span> size 500M;</span><br><span class="line">alter database <span class="builtin-name">add</span> standby logfile<span class="built_in"> group </span>26 <span class="string">'/alidata/oradata/zbdsora/standby26.log'</span> size 500M;</span><br></pre></td></tr></table></figure><h3 id="2-4-从主库创建pfile文件"><a href="#2-4-从主库创建pfile文件" class="headerlink" title="2.4.从主库创建pfile文件"></a>2.4.从主库创建pfile文件</h3><p>创建pfile文件, 默认路径为$ORACLE_HOME/dbs，此处为/alidata/oracle/product/11.2.0/db_1/dbs/，在sqlplus里执行以下命令</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; <span class="keyword">create</span> pfile <span class="keyword">from</span> spfile;</span><br></pre></td></tr></table></figure><p>将主库的pfile复制到备库/alidata/oracle/product/11.2.0/db_1/dbs/下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /alidata/oracle/product/<span class="number">11.2</span><span class="number">.0</span>/db_1/dbs/</span><br><span class="line">scp -P <span class="number">40022</span> initzbdsora.ora <span class="symbol">zyadmin@</span><span class="number">172.16</span><span class="number">.35</span><span class="number">.140</span>:/software/dumpfile/</span><br><span class="line">zyadmin/<span class="number">5</span>Eb/<span class="number">5</span>Al!<span class="symbol">7Uy@</span><span class="number">6</span>Oh!</span><br><span class="line"></span><br><span class="line">cp /software/dumpfile/initzbdsora.ora /alidata/oracle/product/<span class="number">11.2</span><span class="number">.0</span>/db_1/dbs/</span><br><span class="line"></span><br><span class="line">chown oracle. /alidata/oracle/product/<span class="number">11.2</span><span class="number">.0</span>/db_1/dbs/initzbdsora.ora</span><br></pre></td></tr></table></figure><h3 id="2-5-设置主库初始化参数"><a href="#2-5-设置主库初始化参数" class="headerlink" title="2.5.设置主库初始化参数"></a>2.5.设置主库初始化参数</h3><p>编辑/alidata/oracle/product/11.2.0/db_1/dbs/initzbdsora.ora文件，追加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /alidata/oracle/product/11.2.0/db_1/dbs/initzbdsora.ora &lt;&lt; <span class="string">"EOF"</span></span><br><span class="line">*.<span class="attribute">db_unique_name</span>=<span class="string">'zbdsora'</span></span><br><span class="line">*.<span class="attribute">fal_server</span>=<span class="string">'zbdsora_std'</span></span><br><span class="line">*.<span class="attribute">log_archive_config</span>=<span class="string">'dg_config=(zbdsora,zbdsora_std)'</span></span><br><span class="line">*.<span class="attribute">log_archive_dest_1</span>=<span class="string">'location=use_db_recovery_file_dest valid_for=(all_logfiles, all_roles) db_unique_name=zbdsora'</span></span><br><span class="line">*.<span class="attribute">log_archive_dest_2</span>=<span class="string">'service=zbdsora_std lgwr async valid_for=(online_logfile,primary_role) db_unique_name=zbdsora_std'</span></span><br><span class="line">*.<span class="attribute">log_archive_dest_state_1</span>=ENABLE</span><br><span class="line">*.<span class="attribute">log_archive_dest_state_2</span>=ENABLE</span><br><span class="line">*.<span class="attribute">standby_file_management</span>=<span class="string">'AUTO'</span></span><br><span class="line">*.<span class="attribute">db_file_name_convert</span>=<span class="string">'/alidata/oradata/zbdsora'</span>,'/alidata/oradata/zbdsora'</span><br><span class="line">*.<span class="attribute">log_file_name_convert</span>=<span class="string">'/alidata/oradata/zbdsora'</span>,'/alidata/oradata/zbdsora'</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>创建新的主库spfile文件，并重新启动主库</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; shutdown <span class="keyword">immediate</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">create</span> spfile <span class="keyword">from</span> pfile;</span><br><span class="line"><span class="keyword">SQL</span>&gt; startup</span><br></pre></td></tr></table></figure><h3 id="2-6-设置备库初始化参数"><a href="#2-6-设置备库初始化参数" class="headerlink" title="2.6.设置备库初始化参数"></a>2.6.设置备库初始化参数</h3><p>编辑/alidata/oracle/product/11.2.0/db_1/dbs/initzbdsora.ora文件，修改备库初始化参数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /alidata/oracle/product/11.2.0/db_1/dbs/initzbdsora.ora &lt;&lt; <span class="string">"EOF"</span></span><br><span class="line">*.<span class="attribute">db_unique_name</span>=<span class="string">'zbdsora_std'</span></span><br><span class="line">*.<span class="attribute">fal_server</span>=<span class="string">'zbdsora'</span></span><br><span class="line">*.<span class="attribute">log_archive_config</span>=<span class="string">'dg_config=(zbdsora,zbdsora_std)'</span></span><br><span class="line">*.<span class="attribute">log_archive_dest_1</span>=<span class="string">'location=use_db_recovery_file_dest valid_for=(all_logfiles, all_roles) db_unique_name=zbdsora_std'</span></span><br><span class="line">*.<span class="attribute">log_archive_dest_2</span>=<span class="string">'service=zbdsora_pri lgwr async valid_for=(online_logfile,primary_role) db_unique_name=zbdsora'</span></span><br><span class="line">*.<span class="attribute">log_archive_dest_state_1</span>=ENABLE</span><br><span class="line">*.<span class="attribute">log_archive_dest_state_2</span>=ENABLE</span><br><span class="line">*.<span class="attribute">standby_file_management</span>=<span class="string">'AUTO'</span></span><br><span class="line">*.<span class="attribute">db_file_name_convert</span>=<span class="string">'/alidata/oradata/zbdsora'</span>,'/alidata/oradata/zbdsora'</span><br><span class="line">*.<span class="attribute">log_file_name_convert</span>=<span class="string">'/alidata/oradata/zbdsora'</span>,'/alidata/oradata/zbdsora'</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>alter system set log_archive_dest_2=’service=zbdsora_pri lgwr async valid_for=(online_logfile,primary_role) db_unique_name=zbdsora’;</p><h3 id="2-7-复制主库的密码文件到备库"><a href="#2-7-复制主库的密码文件到备库" class="headerlink" title="2.7.复制主库的密码文件到备库"></a>2.7.复制主库的密码文件到备库</h3><p>将密码文件orapwzbdsora复制到备库的/alidata/oracle/product/11.2.0/db_1/dbs/下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">scp -P <span class="number">40022</span> /alidata/oracle/product/<span class="number">11.2</span><span class="number">.0</span>/db_1/dbs/orapwzbdsora <span class="symbol">zyadmin@</span><span class="number">172.16</span><span class="number">.35</span><span class="number">.140</span>:/software/dumpfile/</span><br><span class="line">zyadmin/<span class="number">5</span>Eb/<span class="number">5</span>Al!<span class="symbol">7Uy@</span><span class="number">6</span>Oh!</span><br><span class="line"></span><br><span class="line">cd /alidata/oracle/product/<span class="number">11.2</span><span class="number">.0</span>/db_1/dbs/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cp /software/dumpfile/orapwzbdsora /alidata/oracle/product/<span class="number">11.2</span><span class="number">.0</span>/db_1/dbs/</span><br><span class="line"></span><br><span class="line">chown oracle. /alidata/oracle/product/<span class="number">11.2</span><span class="number">.0</span>/db_1/dbs/orapwzbdsora</span><br></pre></td></tr></table></figure><h3 id="2-8-创建备库相应的目录结构"><a href="#2-8-创建备库相应的目录结构" class="headerlink" title="2.8.创建备库相应的目录结构"></a>2.8.创建备库相应的目录结构</h3><p>使用oracle用户创建以下目录，避免权限问题</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="regexp">/alidata/</span>oradata<span class="regexp">/zbdsora/</span></span><br><span class="line">mkdir -p <span class="regexp">/alidata/</span>oracle<span class="regexp">/admin/</span>zbdsora<span class="regexp">/adump/</span></span><br><span class="line">mkdir -p <span class="regexp">/alidata/</span>oracle<span class="regexp">/fast_recovery_area/</span>zbdsora<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h3 id="2-9-配置主库和备库的监听"><a href="#2-9-配置主库和备库的监听" class="headerlink" title="2.9.配置主库和备库的监听###"></a>2.9.配置主库和备库的监听###</h3><p>使用图形界面配置，采用静态监听,注意一定要配置静态监听</p><p>vim /alidata/oracle/product/11.2.0/db_1/network/admin/listener.ora</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">netmgr</span></span><br></pre></td></tr></table></figure><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">手动配置：</span><br><span class="line">主库：</span><br><span class="line"><span class="attr">SID_LIST_LISTENER</span> =</span><br><span class="line">  (<span class="attr">SID_LIST</span> =</span><br><span class="line">    (<span class="attr">SID_DESC</span> =</span><br><span class="line">      (<span class="attr">GLOBAL_DBNAME</span> = zbdsora_pri)</span><br><span class="line">      (<span class="attr">ORACLE_HOME</span> = /alidata/oracle/product/<span class="number">11.2</span>.<span class="number">0</span>/db_1)</span><br><span class="line">      (<span class="attr">SID_NAME</span> = zbdsora)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"><span class="attr">LISTENER</span> =</span><br><span class="line">  (<span class="attr">DESCRIPTION_LIST</span> =</span><br><span class="line">    (<span class="attr">DESCRIPTION</span> =</span><br><span class="line">      (<span class="attr">ADDRESS</span> = (<span class="attr">PROTOCOL</span> = IPC)(<span class="attr">KEY</span> = EXTPROC1521))</span><br><span class="line">      (<span class="attr">ADDRESS</span> = (<span class="attr">PROTOCOL</span> = TCP)(<span class="attr">HOST</span> = <span class="number">172.16</span>.<span class="number">35.141</span>)(<span class="attr">PORT</span> = <span class="number">1521</span>))</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="attr">ADR_BASE_LISTENER</span> = /alidata/oracle</span><br></pre></td></tr></table></figure><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">备库：</span><br><span class="line"><span class="attr">SID_LIST_LISTENER</span> =</span><br><span class="line">  (<span class="attr">SID_LIST</span> =</span><br><span class="line">    (<span class="attr">SID_DESC</span> =</span><br><span class="line">      (<span class="attr">GLOBAL_DBNAME</span> = zbdsora_std)</span><br><span class="line">      (<span class="attr">ORACLE_HOME</span> = /alidata/oracle/product/<span class="number">11.2</span>.<span class="number">0</span>/db_1)</span><br><span class="line">      (<span class="attr">SID_NAME</span> = zbdsora)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="attr">LISTENER</span> =</span><br><span class="line">  (<span class="attr">DESCRIPTION_LIST</span> =</span><br><span class="line">    (<span class="attr">DESCRIPTION</span> =</span><br><span class="line">      (<span class="attr">ADDRESS</span> = (<span class="attr">PROTOCOL</span> = IPC)(<span class="attr">KEY</span> = EXTPROC1521))</span><br><span class="line">      (<span class="attr">ADDRESS</span> = (<span class="attr">PROTOCOL</span> = TCP)(<span class="attr">HOST</span> = <span class="number">172.16</span>.<span class="number">35.140</span>)(<span class="attr">PORT</span> = <span class="number">1521</span>))</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="attr">ADR_BASE_LISTENER</span> = /alidata/oracle</span><br></pre></td></tr></table></figure><h3 id="2-10-配置主库和备库的网络服务名"><a href="#2-10-配置主库和备库的网络服务名" class="headerlink" title="2.10.配置主库和备库的网络服务名"></a>2.10.配置主库和备库的网络服务名</h3><p>使用图形界面配置，在主备库上均需配置zbdsora、zbdsora_std两个服务名</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">netmgr</span></span><br></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">zbdsora_pri =</span><br><span class="line">  (<span class="name">DESCRIPTION</span> =</span><br><span class="line">        (<span class="name">ADDRESS_LIST</span> =</span><br><span class="line">        (<span class="name">ADDRESS</span> = (<span class="name">PROTOCOL</span> = TCP)(<span class="name">HOST</span> = <span class="number">172.16</span>.<span class="number">35.141</span>)(<span class="name">PORT</span> = <span class="number">1521</span>))</span><br><span class="line">        )</span><br><span class="line">        (<span class="name">CONNECT_DATA</span> =</span><br><span class="line">        (<span class="name">sid</span> = zbdsora)</span><br><span class="line">        )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">zbdsora_std =</span><br><span class="line">  (<span class="name">DESCRIPTION</span> =</span><br><span class="line">    (<span class="name">ADDRESS_LIST</span> =</span><br><span class="line">      (<span class="name">ADDRESS</span> = (<span class="name">PROTOCOL</span> = TCP)(<span class="name">HOST</span> = <span class="number">172.16</span>.<span class="number">35.140</span>)(<span class="name">PORT</span> = <span class="number">1521</span>))</span><br><span class="line">    )</span><br><span class="line">    (<span class="name">CONNECT_DATA</span> =</span><br><span class="line">      (<span class="name">sid</span> = zbdsora)</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ZBDSORA_PRI =</span><br><span class="line">  (<span class="name">DESCRIPTION</span> =</span><br><span class="line">    (<span class="name">ADDRESS_LIST</span> =</span><br><span class="line">      (<span class="name">ADDRESS</span> = (<span class="name">PROTOCOL</span> = TCP)(<span class="name">HOST</span> = <span class="number">172.16</span>.<span class="number">35.141</span>)(<span class="name">PORT</span> = <span class="number">1521</span>))</span><br><span class="line">    )</span><br><span class="line">    (<span class="name">CONNECT_DATA</span> =</span><br><span class="line">      (<span class="name">SID</span> = zbdsora)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">ZBDSORA_STD =</span><br><span class="line">  (<span class="name">DESCRIPTION</span> =</span><br><span class="line">    (<span class="name">ADDRESS_LIST</span> =</span><br><span class="line">      (<span class="name">ADDRESS</span> = (<span class="name">PROTOCOL</span> = TCP)(<span class="name">HOST</span> = <span class="number">172.16</span>.<span class="number">35.140</span>)(<span class="name">PORT</span> = <span class="number">1521</span>))</span><br><span class="line">    )</span><br><span class="line">    (<span class="name">CONNECT_DATA</span> =</span><br><span class="line">      (<span class="name">SID</span> = zbdsora)</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><h3 id="2-11-创建备库并启动"><a href="#2-11-创建备库并启动" class="headerlink" title="2.11.创建备库并启动"></a>2.11.创建备库并启动</h3><p>创建备库的spfile文件，启动备库到nomount模式</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">create</span> spfile <span class="keyword">from</span> pfile;</span><br><span class="line"><span class="keyword">SQL</span>&gt; startup nomount</span><br></pre></td></tr></table></figure><h3 id="2-12-RMAN复制主库到备库"><a href="#2-12-RMAN复制主库到备库" class="headerlink" title="2.12.RMAN复制主库到备库"></a>2.12.RMAN复制主库到备库</h3><p>首先RMAN连接到目标数据库和辅助数据库</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rman <span class="keyword">target</span> sys/oracle<span class="meta">@zbdsora</span>_pri auxiliary sys/oracle<span class="meta">@zbdsora</span>_std</span><br></pre></td></tr></table></figure><p>使用RMAN的duplicate命令进行复制，两边目录结构相同，需要添加nofilenamecheck参数</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RMAN&gt; duplicate target <span class="keyword">database</span> <span class="keyword">for</span> standby <span class="keyword">from</span> active <span class="keyword">database</span> nofilenamecheck;</span><br></pre></td></tr></table></figure><p>复制成功后，备库自动被加载为mount模式，进入sqlplus查看</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; <span class="keyword">select</span> status <span class="keyword">from</span> v$instance;</span><br></pre></td></tr></table></figure><h3 id="2-13-在备库开启实时日志应用"><a href="#2-13-在备库开启实时日志应用" class="headerlink" title="2.13.在备库开启实时日志应用"></a>2.13.在备库开启实时日志应用</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> <span class="keyword">using</span> <span class="keyword">current</span> logfile disconnect <span class="keyword">from</span> <span class="keyword">session</span>;</span><br></pre></td></tr></table></figure><h3 id="2-14-主备库角色状态查询"><a href="#2-14-主备库角色状态查询" class="headerlink" title="2.14.主备库角色状态查询"></a>2.14.主备库角色状态查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> switchover_status,database_role <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br><span class="line"><span class="comment">--主库显示：TO STANDBY/PRIMARY，如果显示SESSION ACTIVE表示还有活动的会话，需要关闭活动的会话再检查</span></span><br><span class="line"><span class="comment">--备库显示：NOT ALLOWED/PHYSICAL STANDBY</span></span><br></pre></td></tr></table></figure><h2 id="3-测试DG"><a href="#3-测试DG" class="headerlink" title="3.测试DG"></a>3.测试DG</h2><h3 id="3-1-执行日志切换测试"><a href="#3-1-执行日志切换测试" class="headerlink" title="3.1.执行日志切换测试"></a>3.1.执行日志切换测试</h3><p>在主库端切换归档，在备库检查是否也发生了切换</p><p>主库上执行日志切换</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; archive log list;</span><br><span class="line">SQL&gt; alter<span class="built_in"> system </span>switch logfile;</span><br><span class="line">archive log list;</span><br></pre></td></tr></table></figure><p>备库上查看，日志的sequence号也跟着变了</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; archive <span class="built_in">log</span> <span class="built_in">list</span>;</span><br></pre></td></tr></table></figure><h3 id="3-2-查看备库启动的DG进程"><a href="#3-2-查看备库启动的DG进程" class="headerlink" title="3.2.查看备库启动的DG进程"></a>3.2.查看备库启动的DG进程</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select process,client_process,sequence#,status <span class="keyword">from</span> v$managed_standby;</span><br><span class="line">PROCESS   CLIENT_P  SEQUENCE# STATUS  </span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">ARCH      ARCH             <span class="number">23</span> CLOSING  </span><br><span class="line">ARCH      ARCH              <span class="number">0</span> CONNECTED            <span class="comment">//归档进程  </span></span><br><span class="line">ARCH      ARCH             <span class="number">21</span> CLOSING  </span><br><span class="line">ARCH      ARCH              <span class="number">0</span> CONNECTED  </span><br><span class="line">RFS       ARCH              <span class="number">0</span> IDLE  </span><br><span class="line">RFS       UNKNOWN           <span class="number">0</span> IDLE  </span><br><span class="line">RFS       LGWR             <span class="number">24</span> IDLE               <span class="comment">//归档传输进程  </span></span><br><span class="line">RFS       UNKNOWN           <span class="number">0</span> IDLE  </span><br><span class="line">MRP0      N/A              <span class="number">24</span> APPLYING_LOG      <span class="comment">//日志应用进程  </span></span><br><span class="line"></span><br><span class="line"><span class="number">9</span> rows selected.</span><br></pre></td></tr></table></figure><h3 id="3-3-查看数据库的保护模式"><a href="#3-3-查看数据库的保护模式" class="headerlink" title="3.3.查看数据库的保护模式"></a>3.3.查看数据库的保护模式</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> database_role,protection_mode,protection_level,open_mode <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br><span class="line">DATABASE_ROLE    PROTECTION_MODE      PROTECTION_LEVEL     OPEN_MODE  </span><br><span class="line"></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">PRIMARY</span>          MAXIMUM PERFORMANCE  MAXIMUM PERFORMANCE  <span class="keyword">READ</span> <span class="keyword">WRITE</span></span><br></pre></td></tr></table></figure><h3 id="3-4-查看DG的日志信息"><a href="#3-4-查看DG的日志信息" class="headerlink" title="3.4.查看DG的日志信息"></a>3.4.查看DG的日志信息</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; <span class="keyword">select</span> * <span class="keyword">from</span> v$dataguard_status;</span><br></pre></td></tr></table></figure><h3 id="3-5-Open-Read-Only-Standby数据库"><a href="#3-5-Open-Read-Only-Standby数据库" class="headerlink" title="3.5.Open Read Only Standby数据库"></a>3.5.Open Read Only Standby数据库</h3><p>以只读方式打开备库，并开启实时日志应用</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; shutdown <span class="keyword">immediate</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; startup</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> database_role,protection_mode,protection_level,open_mode <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> process,client_process,<span class="keyword">sequence</span>#,status <span class="keyword">from</span> v$managed_standby;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> <span class="keyword">using</span> <span class="keyword">current</span> logfile disconnect <span class="keyword">from</span> <span class="keyword">session</span>;</span><br></pre></td></tr></table></figure><h3 id="3-6-解锁scott用户并添加数据，验证是否同步"><a href="#3-6-解锁scott用户并添加数据，验证是否同步" class="headerlink" title="3.6.解锁scott用户并添加数据，验证是否同步"></a>3.6.解锁scott用户并添加数据，验证是否同步</h3><p>在主库解锁scott用户并创建测试表，插入10000行数据。</p><p>操作如下</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">set</span> <span class="type">line</span> <span class="number">200</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> username,default_tablespace,account_status <span class="keyword">from</span> dba_users <span class="keyword">where</span> username=<span class="string">'SCOTT'</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">user</span> scott account unlock;</span><br><span class="line"><span class="keyword">SQL</span>&gt; conn scott/tiger;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">show</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">create</span> <span class="keyword">table</span> test001 (id number(<span class="number">10</span>),<span class="type">name</span> varchar2(<span class="number">20</span>));</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">begin</span></span><br><span class="line">     <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.10000</span> <span class="keyword">loop</span></span><br><span class="line">     <span class="keyword">insert</span> <span class="keyword">into</span> test001 <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">'ww'</span>);</span><br><span class="line">     <span class="keyword">end</span> <span class="keyword">loop</span>;</span><br><span class="line">     <span class="keyword">end</span>;</span><br><span class="line">     /</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><p>standby端查询scott用户是否解锁，以及test001表是否创建并且插入了10000行数据</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; conn scott/tiger;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> * <span class="keyword">from</span> tab;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> count(*) <span class="keyword">from</span> scott.test001;</span><br></pre></td></tr></table></figure><h2 id="4-DG三种模式"><a href="#4-DG三种模式" class="headerlink" title="4.DG三种模式"></a>4.DG三种模式</h2><h3 id="4-1-最大性能模式max-performance-默认"><a href="#4-1-最大性能模式max-performance-默认" class="headerlink" title="4.1.最大性能模式max performance-默认"></a>4.1.最大性能模式max performance-默认</h3><p>这种保护模式（默认）提供了可能的最高级别的数据保护，而不影响主数据库的性能。这是通过允许事务在恢复该事务所需重做数据在写到本地联机重做日志后立即提交而实现的。主数据库的重做数据流也写到至少一个备数据库，但是那个重做流相对于创建重做数据的事务是异步写的。</p><p>当所用的网络连接有足够的带宽，这种模式提供了近似于最大可用性模式的数据保护级别，并且对主数据库性能的影响最小。</p><h3 id="4-2-最大可用性模式max-availability"><a href="#4-2-最大可用性模式max-availability" class="headerlink" title="4.2.最大可用性模式max availability"></a>4.2.最大可用性模式max availability</h3><p>这种保护模式提供了可能的最高级别的数据保护，而不用与主数据库的可用性相折衷。与最大保护模式相同，在恢复事务所需的重做写到本地联机重做日志和至少一个事务一致性备数据库上的备重做日志之前，事务将不会提交。与最大保护模式不同的是，如果故障导致主数据库无法写重做流到异地备重做日志时，主数据库不会关闭。替代地，主数据库以最大性能模式运行直到故障消除，并且解决所有重做日志文件中的中断。当所有中断解决之后，主数据库自动继续以最大可用性模式运行。</p><p>这种模式确保如果主数据库故障，但是只有当第二次故障没有阻止完整的重做数据集从主数据库发送到至少一个备数据库时，不发生数据丢失。</p><h3 id="4-3-最大保护模式max-protection"><a href="#4-3-最大保护模式max-protection" class="headerlink" title="4.3.最大保护模式max protection"></a>4.3.最大保护模式max protection</h3><p>这种保护模式确保如果主数据库故障不会发生数据丢失。要提供这种级别的保护，恢复每个事务所需的重做数据必须在事务提交之前同时写到本地联机重做日志和至少一个备数据库上的备重做日志。要确保不发生数据丢失，如果故障导致主数据库无法写重做流到至少一个事务一致性备数据库的备重做日志时，主数据库会关闭。</p><h3 id="4-4-查询当前模式"><a href="#4-4-查询当前模式" class="headerlink" title="4.4.查询当前模式"></a>4.4.查询当前模式</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; <span class="keyword">select</span> protection_mode,protection_level <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br></pre></td></tr></table></figure><h2 id="5-DG切换测试"><a href="#5-DG切换测试" class="headerlink" title="5.DG切换测试"></a>5.DG切换测试</h2><h3 id="5-1-DG-switchover-切换测试"><a href="#5-1-DG-switchover-切换测试" class="headerlink" title="5.1.DG switchover 切换测试"></a>5.1.DG switchover 切换测试</h3><p>db11-zbdsora：主库——&gt;备库</p><p>db12-zbdsora：备库——&gt;主库</p><p>主备库角色状态查询</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> switchover_status,database_role,open_mode <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br><span class="line"><span class="comment">--db11-zbdsora显示：TO STANDBY/PRIMARY，如果显示SESSION ACTIVE表示还有活动的会话，需要关闭会话再检查</span></span><br><span class="line"><span class="comment">--db12-zbdsora显示：NOT ALLOWED/PHYSICAL STANDBY</span></span><br></pre></td></tr></table></figure><p>主-zbdsora切换到备库</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">commit</span> <span class="keyword">to</span> switchover <span class="keyword">to</span> physical standby;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">commit</span> <span class="keyword">to</span> switchover <span class="keyword">to</span> physical standby <span class="keyword">with</span> <span class="keyword">session</span> shutdown;</span><br><span class="line"><span class="comment">--如果状态显示SESSION ACTIVE，在切换的时候可以指定with session shutdown 子句强制关闭活动的会话。</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; shutdown <span class="keyword">immediate</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; startup mount</span><br></pre></td></tr></table></figure><p>从-zbdsora切换到主库</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">commit</span> <span class="keyword">to</span> switchover <span class="keyword">to</span> <span class="keyword">primary</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">open</span>;</span><br></pre></td></tr></table></figure><p>db11-zbdsora执行APPLY LOG命令</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--启用mount状态下的APPLY LOG</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> disconnect <span class="keyword">from</span> <span class="keyword">session</span>;</span><br><span class="line"><span class="comment">--启用open状态（READ ONLY WITH APPLY）下的APPLY LOG</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> cancel;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">open</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> disconnect <span class="keyword">from</span> <span class="keyword">session</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> switchover_status,database_role,open_mode <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br></pre></td></tr></table></figure><h3 id="5-2-DG-failover-切换测试"><a href="#5-2-DG-failover-切换测试" class="headerlink" title="5.2.DG failover 切换测试"></a>5.2.DG failover 切换测试</h3><p>db11-zbdsora：主库——&gt;崩溃</p><p>db12-zbdsora：备库——&gt;主库</p><p>主备库角色状态查询</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; <span class="keyword">select</span> switchover_status,database_role,open_mode <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br></pre></td></tr></table></figure><p>db11-zbdsora通过shutdown abort方式人工模拟主库崩溃，直接关闭</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select open_mode <span class="keyword">from</span> v<span class="variable">$database</span>;</span><br><span class="line">SQL&gt; shutdown abort</span><br><span class="line">SQL&gt; startup mount</span><br><span class="line">SQL&gt; alter<span class="built_in"> system </span>flush redo <span class="keyword">to</span> <span class="string">'zbdsora_std'</span>;</span><br></pre></td></tr></table></figure><p>db12-zbdsora执行如下操作切换为主库</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> thread#, low_sequence#, high_sequence# <span class="keyword">from</span> v$archive_gap;</span><br><span class="line"><span class="comment">--如果没有发现明显的gap现象，说明此次的failover不会有数据损失情况。在备库，要进行关闭apply和结束应用动作。</span></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> cancel;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> finish;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">commit</span> <span class="keyword">to</span> switchover <span class="keyword">to</span> <span class="keyword">primary</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">open</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> open_mode, switchover_status <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br></pre></td></tr></table></figure><h3 id="5-3-DG-failover后重建DG"><a href="#5-3-DG-failover后重建DG" class="headerlink" title="5.3.DG failover后重建DG"></a>5.3.DG failover后重建DG</h3><p>db11-zbdsora：崩溃——&gt;备库</p><p>db12-zbdsora：主库——&gt;主库（保持主库状态不变）</p><p>db12-zbdsora主库角色状态查询</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; <span class="keyword">select</span> switchover_status,database_role,open_mode <span class="keyword">from</span> v$<span class="keyword">database</span>;</span><br></pre></td></tr></table></figure><p>db12-zbdsora主库创建备库控制文件</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /u01/bak/</span><br></pre></td></tr></table></figure><p>SQL&gt; alter database create standby controlfile as ‘/u01/bak/control01.ctl’;</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">将备库控制文件拷贝至db11</span><br><span class="line">scp ezdb12:/u01/bak/control01.ctl /alidata/oradata/zbdsora/control01.ctl</span><br><span class="line">cp /alidata/oradata/zbdsora/control01.ctl /u01/app/oracle/fast_recovery_area/zbdsora/</span><br><span class="line">mv /u01/app/oracle/fast_recovery_area/zbdsora/control01.ctl /u01/app/oracle/fast_recovery_area/zbdsora/control02.ctl</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">恢复对应数据文件至db11，并启动db11-zbdsora到mount状态，应用APPLY模式</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; startup mount;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> disconnect <span class="keyword">from</span> <span class="keyword">session</span>;</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">启动db11-zbdsora至<span class="keyword">OPEN</span>状态，并应用APPLY REDO模式</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> cancel;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">open</span>;</span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> disconnect <span class="keyword">from</span> <span class="keyword">session</span>;</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">6.</span>开启和关闭DataGuard的流程</span><br><span class="line"><span class="number">6.1</span>.关闭</span><br><span class="line">关闭主库</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; shutdown <span class="keyword">immediate</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">关闭主库监听</span><br><span class="line"></span><br><span class="line">lsnrctl stop</span><br><span class="line"><span class="number">1</span></span><br><span class="line">查询备库是否正在执行重做应用或实时应用。如果MRP0或MRP进程存在，则备库正在应用重做。</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">select</span> process, status <span class="keyword">from</span> v$managed_standby;</span><br><span class="line"><span class="number">1</span></span><br><span class="line">如果重做应用程序正在运行，停止备库的Redo日志的应用</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> cancel;</span><br><span class="line"><span class="number">1</span></span><br><span class="line">关闭备库</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; shutdown <span class="keyword">immediate</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">关闭备库监听</span><br><span class="line"></span><br><span class="line">lsnrctl stop</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">6.2</span>.开启</span><br><span class="line">启动备库监听</span><br><span class="line"></span><br><span class="line">lsnrctl <span class="keyword">start</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">启动备库到mount状态</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; startup mount;</span><br><span class="line"><span class="number">1</span></span><br><span class="line">开启备库的Redo日志应用</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; <span class="keyword">alter</span> <span class="keyword">database</span> recover managed standby <span class="keyword">database</span> <span class="keyword">using</span> <span class="keyword">current</span> logfile disconnect <span class="keyword">from</span> <span class="keyword">session</span>;</span><br><span class="line"><span class="number">1</span></span><br><span class="line">启动主库监听</span><br><span class="line"></span><br><span class="line">lsnrctl <span class="keyword">start</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">启动主库</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>&gt; startup;</span><br><span class="line"><span class="number">1</span></span><br><span class="line">检查日志情况的<span class="keyword">SQL</span>语句</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> al.thrd "Thread", almax "Last Seq Received", lhmax "Last Seq Applied"</span><br><span class="line"> <span class="keyword">from</span> (<span class="keyword">select</span> thread# thrd, max(<span class="keyword">sequence</span>#) almax</span><br><span class="line">       <span class="keyword">from</span> v$archived_log</span><br><span class="line">       <span class="keyword">where</span> resetlogs_change#=(<span class="keyword">select</span> resetlogs_change# <span class="keyword">from</span> v$<span class="keyword">database</span>)</span><br><span class="line">       <span class="keyword">group</span> <span class="keyword">by</span> thread#) al,</span><br><span class="line">      (<span class="keyword">select</span> thread# thrd, max(<span class="keyword">sequence</span>#) lhmax</span><br><span class="line">       <span class="keyword">from</span> v$log_history</span><br><span class="line">       <span class="keyword">where</span> first_time=(<span class="keyword">select</span> max(first_time) <span class="keyword">from</span> v$log_history)</span><br><span class="line">       <span class="keyword">group</span> <span class="keyword">by</span> thread#) lh</span><br><span class="line"> <span class="keyword">where</span> al.thrd = lh.thrd;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-环境介绍&quot;&gt;&lt;a href=&quot;#1-环境介绍&quot; class=&quot;headerlink&quot; title=&quot;1.环境介绍&quot;&gt;&lt;/a&gt;1.环境介绍&lt;/h2&gt;&lt;p&gt;百货–数据库服务器&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;实例名称&lt;/th&gt;
&lt;th&gt;I
      
    
    </summary>
    
    
      <category term="Oracle" scheme="https://husky-wu.github.io/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="https://husky-wu.github.io/tags/Oracle/"/>
    
      <category term="Data Guard" scheme="https://husky-wu.github.io/tags/Data-Guard/"/>
    
      <category term="主从" scheme="https://husky-wu.github.io/tags/%E4%B8%BB%E4%BB%8E/"/>
    
  </entry>
  
</feed>
